{"version":3,"sources":["assets/bundle/00_base/script/common/ClickHide.ts","assets/bundle/00_base/script/common/CloseView.ts","assets/bundle/00_base/script/common/ComponentBase.ts","assets/bundle/00_base/script/common/CountryCode.ts","assets/bundle/00_base/script/common/EventManger.ts","assets/bundle/00_base/script/list/ListItem.ts","assets/bundle/00_base/script/list/List.ts","assets/bundle/00_base/script/common/TimeTickerDown.ts","assets/bundle/00_base/script/closeScene.ts","assets/bundle/00_base/script/common/roundRect.ts","assets/bundle/00_base/script/uiutils/tips.ts","assets/bundle/00_base/script/uiutils/toggle.ts"],"names":["_a","cc","_decorator","ccclass","property","NewClass","_super","__extends","_this","apply","this","arguments","WillHideTartget","prototype","start","node","on","Node","EventType","TOUCH_END","onTouchNode","active","__decorate","Component","exports","default","CloseView","WillCloseTartget","destroy","EventManger_1","require","ComponentBase","events","TouchOn","target","cb","cbo","push","name","TOUCH_START","EventOn","length","EventManger","onDestroy","forEach","ele","off","alertDestory","CountryCodeData","id","code","zh","en","eventManager","Object","defineProperty","get","singe","once","emit","data","error","i","evt","splice","ins","disallowMultiple","menu","executionOrder","SelectedType","ListItem","icon","title","selectedMode","NONE","selectedFlag","selectedSpriteFrame","_unselectedSpriteFrame","adaptiveSize","_selected","_eventReg","set","val","TOGGLE","SWITCH","sp","getComponent","Sprite","spriteFrame","_btnCom","Button","onLoad","com","SIZE_CHANGED","_onSizeChange","_registerEvent","btnCom","list","clickEvents","unshift","createEvt","_onItemAdaptive","component","handlerName","isValid","match","pop","replace","EventHandler","handler","showAni","aniType","callFunc","del","t","tween","to","scale","by","y","height","x","width","call","_delSingleItem","n","displayData","listId","onClickThis","selectedId","type","tooltip","CC_DEV","Enum","visible","SpriteFrame","requireComponent","ListItem_1","TemplateType","SlideType","List","templateType","NODE","tmpNode","tmpPrefab","_slideMode","NORMAL","pageDistance","pageChangeEvent","_virtual","cyclic","lackCenter","lackSlide","_updateRate","frameByFrameRenderNum","renderEvent","repeatEventSingle","selectedEvent","_selectedId","_forceUpdate","_updateDone","_numItems","_inited","_needUpdateWidget","_aniDelRuning","_doneAfterUpdate","adhering","_adheringBarrier","curPageNum","_onScrolling","item","SINGLE","getItemByListId","listItem","_lastSelectedId","selected","lastItem","emitEvents","_actualNumItems","MULT","bool","sub","multSelected","indexOf","checkInited","_resizeContent","_cyclicNum","slideMode","PAGE","nearestListId","layout","content","Layout","enabled","_delRedundantItem","firstListId","len","_createOrUpdateItem2","_updateCounter","displayItemNum","_scrollView","_init","_itemTmp","_pool","clear","onEnable","_aniDelItem","_aniDelBeforePos","position","_aniDelBeforeScale","_aniDelCB","onDisable","_unregisterEvent","_onTouchStart","_onTouchUp","TOUCH_CANCEL","_onTouchCancelled","_onScrollBegan","_onScrollEnded","_onSizeChanged","ScrollView","_layout","_align","_resizeMode","resizeMode","_startAxis","startAxis","_topGap","paddingTop","_rightGap","paddingRight","_bottomGap","paddingBottom","_leftGap","paddingLeft","_columnGap","spacingX","_lineGap","spacingY","_colLineNum","_verticalDir","verticalDirection","_horizontalDir","horizontalDirection","setTemplateItem","instantiate","PREFAB","ADHERING","inertia","_onMouseWheel","virtual","_lastDisplayData","NodePool","_processAutoScrolling","bind","_startBounceBackIfNeeded","Type","HORIZONTAL","HorizontalDirection","LEFT_TO_RIGHT","_alignCalcType","RIGHT_TO_LEFT","VERTICAL","VerticalDirection","TOP_TO_BOTTOM","BOTTOM_TO_TOP","GRID","AxisDirection","removeAllChildren","dt","brakingFactor","percentage","Math","min","time","newPosition","add","mul","EPSILON","reachedEnd","abs","fireEvent","deltaMove","getContentPosition","ResizeMode","CHILDREN","_itemSize","cellSize","size","remove","Widget","_sizeType","trimW","floor","trimH","printLog","result","_customSize","fixed","_getFixedSize","count","lineNum","ceil","colNum","_allItemSize","_allItemSizeNoEdge","totalSize","_cyclicPos1","spacing","_cyclicPos2","_cyclicAllItemSize","_cycilcAllItemSizeNoEdge","_lack","slideOffset","targetWH","ev","frameCount","scrollPos","getPosition","addVal","v2","isAutoScrolling","_calcViewPos","vTop","vRight","vBottom","vLeft","viewTop","viewBottom","viewRight","viewLeft","itemPos","curId","endId","breakFor","_calcItemPos","right","left","bottom","top","ww","hh","haveDataChange","sort","a","b","c","_createOrUpdateItem","_calcNearestItem","elasticLeft","elasticRight","elasticTop","elasticBottom","itemX","itemY","cs","offset","anchorX","anchorY","colLine","_calcExistItemPos","getItemPos","parseInt","_beganPos","curScrollIsTouch","scrollToListId","_pageAdhere","adhere","captureListeners","isMe","eventPhase","Event","AT_TARGET","itemNode","_listId","parent","_scrollItem","_scrollPos","simulate","updateAll","_scrollToListId","unschedule","_scrollToSo","scrollTo","max","_scrollToEndTime","Date","getTime","curPos","dis","canSkip","timeInSecond","prePage","nextPage","update","setPosition","_resetItemSize","canGet","setContentSize","addChild","widget","updateAlignment","setSiblingIndex","childrenCount","_updateListItem","children","_updateItemPos","listIdOrItem","isNaN","pos","setMultSelected","args","Array","isArray","getMultSelected","hasMultSelected","updateItem","numItems","_getOutsideItem","find","d","arr","isCached","put","m","removeFromParent","aniDelItem","warn","curLastId","resetSelectedId","newId","newData","newCustomSize","idNumber","sec","haveCB","posData","overStress","updateLayout","targetX","targetY","viewPos","comparePos","runScroll","scrollToOffset","scheduleOnce","center","skipPage","pageNum","calcCustomSize","temp","keys","Prefab","Float","range","slide","Boolean","Integer","serializable","ComponentBase_1","TimeTickerDown","total","down","label","run","Label","RichText","string","String","schedule","timeDown","closeScene","goToHall","director","loadScene","executeInEditMode","roundRect","radius","grap","Graphics","addComponent","fill","Tips","Show","txt","box","bg","texture","Texture2D","initWithData","Uint8Array","PixelFormat","RGB888","setTexture","setRect","rect","winSize","opacity","lbNode","lab","fontSize","getScene","getComponentInChildren","Canvas","delay","Tween","stopAllByTarget","toggle","leftToggle","rightToggle","toggleContainerCall","isChecked","Toggle"],"mappings":"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H,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA;MAAAH,IAAA;MAAAC,MAAA;MAAAC,IAAA;MAAAC,IAAA;OACA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","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Node)\n    private WillHideTartget: cc.Node = null;\n\n    start() {\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchNode, this);\n    }\n\n    private onTouchNode() {\n        this.WillHideTartget.active = false;\n    }\n}\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CloseView extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    private WillCloseTartget: cc.Node = null;\r\n\r\n    start() {\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchNode, this);\r\n    }\r\n\r\n    private onTouchNode() {\r\n        this.WillCloseTartget.destroy();\r\n    }\r\n}\r\n","import { EventManger } from \"./EventManger\";\r\n\r\nexport interface EventStruct {\r\n    target: cc.Node;\r\n    name: string;\r\n    cb: Function;\r\n    cbo: cc.Component;\r\n}\r\nconst { property } = cc._decorator;\r\n\r\nexport default class ComponentBase extends cc.Component {\r\n    private events: EventStruct[] = [];\r\n\r\n\r\n    protected TouchOn(target: cc.Node, cb: Function, cbo: cc.Component = this) {\r\n        if (target && cb) {\r\n            this.events.push({ target: target, name: cc.Node.EventType.TOUCH_START, cb: cb, cbo: cbo });\r\n            target.on(cc.Node.EventType.TOUCH_END, cb, cbo);\r\n        }\r\n    }\r\n\r\n    protected EventOn(name: string, cb: Function, cbo: cc.Component = this) {\r\n        if (name && name.length > 0 && cb) {\r\n            this.events.push({ target: null, name: name, cb: cb, cbo: cbo });\r\n            EventManger.on(name, cb, cbo);\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.events.forEach((ele: EventStruct) => {\r\n            if (ele.target) {\r\n                ele.target.off(ele.name, ele.cb, ele.cbo);\r\n            } else {\r\n                EventManger.off(ele.name, ele.cb, ele.cbo);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    protected alertDestory() {\r\n        this.node.destroy();\r\n    }\r\n\r\n}\r\n\r\n","\r\nexport interface CodeStruct {\r\n    id: number;\r\n    code: string,\r\n    zh: string;\r\n    en: string;\r\n}\r\n\r\nexport const CountryCodeData = [\r\n    { \"id\": 0, \"code\": \"1\", \"zh\": \"美国\", \"en\": \"\" },\r\n    { \"id\": 1, \"code\": \"1\", \"zh\": \"加拿大\", \"en\": \"\" },\r\n    { \"id\": 2, \"code\": \"1-242\", \"zh\": \"巴哈马\", \"en\": \"\" },\r\n    { \"id\": 3, \"code\": \"1-246\", \"zh\": \"巴巴多斯\", \"en\": \"\" },\r\n    { \"id\": 4, \"code\": \"1-264\", \"zh\": \"安圭拉岛\", \"en\": \"\" },\r\n    { \"id\": 5, \"code\": \"1-268\", \"zh\": \"安提瓜\", \"en\": \"\" },\r\n    { \"id\": 6, \"code\": \"1-268\", \"zh\": \"巴布达\", \"en\": \"\" },\r\n    { \"id\": 7, \"code\": \"1-284\", \"zh\": \"英属维京群岛\", \"en\": \"\" },\r\n    { \"id\": 8, \"code\": \"1-340\", \"zh\": \"美属维尔京群岛\", \"en\": \"\" },\r\n    { \"id\": 9, \"code\": \"1-345\", \"zh\": \"开曼群岛\", \"en\": \"\" },\r\n    { \"id\": 10, \"code\": \"1-441\", \"zh\": \"百慕大\", \"en\": \"\" },\r\n    { \"id\": 11, \"code\": \"1-473\", \"zh\": \"格林纳达\", \"en\": \"\" },\r\n    { \"id\": 12, \"code\": \"1-649\", \"zh\": \"特克斯\", \"en\": \"\" },\r\n    { \"id\": 13, \"code\": \"1-649\", \"zh\": \"凯科斯群岛\", \"en\": \"\" },\r\n    { \"id\": 14, \"code\": \"1-664\", \"zh\": \"蒙特塞拉特\", \"en\": \"\" },\r\n    { \"id\": 15, \"code\": \"1-670\", \"zh\": \"北马里亚纳群岛\", \"en\": \"\" },\r\n    { \"id\": 16, \"code\": \"1-671\", \"zh\": \"关岛\", \"en\": \"\" },\r\n    { \"id\": 17, \"code\": \"1-684\", \"zh\": \"美属萨摩亚\", \"en\": \"\" },\r\n    { \"id\": 18, \"code\": \"1-758\", \"zh\": \"圣卢西亚\", \"en\": \"\" },\r\n    { \"id\": 19, \"code\": \"1-767\", \"zh\": \"多米尼克\", \"en\": \"\" },\r\n    { \"id\": 20, \"code\": \"1-784\", \"zh\": \"圣文森特\", \"en\": \"\" },\r\n    { \"id\": 21, \"code\": \"1-784\", \"zh\": \"格林纳丁斯\", \"en\": \"\" },\r\n    { \"id\": 22, \"code\": \"1-787\", \"zh\": \"波多黎各\", \"en\": \"\" },\r\n    { \"id\": 23, \"code\": \"1-809\", \"zh\": \"多米尼加共和国\", \"en\": \"\" },\r\n    { \"id\": 24, \"code\": \"1-868\", \"zh\": \"特立尼达和多巴哥\", \"en\": \"\" },\r\n    { \"id\": 25, \"code\": \"1-869\", \"zh\": \"圣基茨和尼维斯\", \"en\": \"\" },\r\n    { \"id\": 26, \"code\": \"1-876\", \"zh\": \"牙买加\", \"en\": \"\" },\r\n    { \"id\": 27, \"code\": \"1-939\", \"zh\": \"波多黎各\", \"en\": \"\" },\r\n    { \"id\": 28, \"code\": \"20\", \"zh\": \"埃及\", \"en\": \"\" },\r\n    { \"id\": 29, \"code\": \"211\", \"zh\": \"南苏丹\", \"en\": \"\" },\r\n    { \"id\": 30, \"code\": \"212\", \"zh\": \"摩洛哥\", \"en\": \"\" },\r\n    { \"id\": 31, \"code\": \"213\", \"zh\": \"阿尔及利亚\", \"en\": \"\" },\r\n    { \"id\": 32, \"code\": \"216\", \"zh\": \"突尼斯\", \"en\": \"\" },\r\n    { \"id\": 33, \"code\": \"218\", \"zh\": \"利比亚\", \"en\": \"\" },\r\n    { \"id\": 34, \"code\": \"220\", \"zh\": \"冈比亚\", \"en\": \"\" },\r\n    { \"id\": 35, \"code\": \"221\", \"zh\": \"塞内加尔\", \"en\": \"\" },\r\n    { \"id\": 36, \"code\": \"222\", \"zh\": \"毛里塔尼亚\", \"en\": \"\" },\r\n    { \"id\": 37, \"code\": \"223\", \"zh\": \"马里\", \"en\": \"\" },\r\n    { \"id\": 38, \"code\": \"224\", \"zh\": \"几内亚\", \"en\": \"\" },\r\n    { \"id\": 39, \"code\": \"225\", \"zh\": \"科特迪瓦\", \"en\": \"\" },\r\n    { \"id\": 40, \"code\": \"226\", \"zh\": \"布基纳法索\", \"en\": \"\" },\r\n    { \"id\": 41, \"code\": \"227\", \"zh\": \"尼日尔\", \"en\": \"\" },\r\n    { \"id\": 42, \"code\": \"228\", \"zh\": \"多哥\", \"en\": \"\" },\r\n    { \"id\": 43, \"code\": \"229\", \"zh\": \"贝宁\", \"en\": \"\" },\r\n    { \"id\": 44, \"code\": \"230\", \"zh\": \"毛里求斯\", \"en\": \"\" },\r\n    { \"id\": 45, \"code\": \"231\", \"zh\": \"利比里亚\", \"en\": \"\" },\r\n    { \"id\": 46, \"code\": \"232\", \"zh\": \"塞拉利昂\", \"en\": \"\" },\r\n    { \"id\": 47, \"code\": \"233\", \"zh\": \"加纳\", \"en\": \"\" },\r\n    { \"id\": 48, \"code\": \"234\", \"zh\": \"尼日利亚\", \"en\": \"\" },\r\n    { \"id\": 49, \"code\": \"235\", \"zh\": \"乍得\", \"en\": \"\" },\r\n    { \"id\": 50, \"code\": \"236\", \"zh\": \"中非共和国\", \"en\": \"\" },\r\n    { \"id\": 51, \"code\": \"237\", \"zh\": \"喀麦隆\", \"en\": \"\" },\r\n    { \"id\": 52, \"code\": \"238\", \"zh\": \"佛得角\", \"en\": \"\" },\r\n    { \"id\": 53, \"code\": \"239\", \"zh\": \"圣多美和普林西比\", \"en\": \"\" },\r\n    { \"id\": 54, \"code\": \"240\", \"zh\": \"赤道几内亚\", \"en\": \"\" },\r\n    { \"id\": 55, \"code\": \"241\", \"zh\": \"加蓬\", \"en\": \"\" },\r\n    { \"id\": 56, \"code\": \"242\", \"zh\": \"刚果共和国(布)\", \"en\": \"\" },\r\n    { \"id\": 57, \"code\": \"243\", \"zh\": \"刚果民主共和国(金)\", \"en\": \"\" },\r\n    { \"id\": 58, \"code\": \"244\", \"zh\": \"安哥拉\", \"en\": \"\" },\r\n    { \"id\": 59, \"code\": \"245\", \"zh\": \"几内亚比绍\", \"en\": \"\" },\r\n    { \"id\": 60, \"code\": \"246\", \"zh\": \"迪戈加西亚岛\", \"en\": \"\" },\r\n    { \"id\": 61, \"code\": \"247\", \"zh\": \"阿森松岛\", \"en\": \"\" },\r\n    { \"id\": 62, \"code\": \"248\", \"zh\": \"塞舌尔\", \"en\": \"\" },\r\n    { \"id\": 63, \"code\": \"249\", \"zh\": \"苏丹\", \"en\": \"\" },\r\n    { \"id\": 64, \"code\": \"250\", \"zh\": \"卢旺达\", \"en\": \"\" },\r\n    { \"id\": 65, \"code\": \"251\", \"zh\": \"埃塞俄比亚\", \"en\": \"\" },\r\n    { \"id\": 66, \"code\": \"252\", \"zh\": \"索马里\", \"en\": \"\" },\r\n    { \"id\": 67, \"code\": \"253\", \"zh\": \"吉布提\", \"en\": \"\" },\r\n    { \"id\": 68, \"code\": \"254\", \"zh\": \"肯尼亚\", \"en\": \"\" },\r\n    { \"id\": 69, \"code\": \"255\", \"zh\": \"坦桑尼亚\", \"en\": \"\" },\r\n    { \"id\": 70, \"code\": \"256\", \"zh\": \"乌干达\", \"en\": \"\" },\r\n    { \"id\": 71, \"code\": \"257\", \"zh\": \"布隆迪\", \"en\": \"\" },\r\n    { \"id\": 72, \"code\": \"258\", \"zh\": \"莫桑比克\", \"en\": \"\" },\r\n    { \"id\": 73, \"code\": \"259\", \"zh\": \"桑给巴尔\", \"en\": \"\" },\r\n    { \"id\": 74, \"code\": \"260\", \"zh\": \"赞比亚\", \"en\": \"\" },\r\n    { \"id\": 75, \"code\": \"261\", \"zh\": \"马达加斯加\", \"en\": \"\" },\r\n    { \"id\": 76, \"code\": \"262\", \"zh\": \"留尼汪\", \"en\": \"\" },\r\n    { \"id\": 77, \"code\": \"263\", \"zh\": \"津巴布韦\", \"en\": \"\" },\r\n    { \"id\": 78, \"code\": \"264\", \"zh\": \"纳米比亚\", \"en\": \"\" },\r\n    { \"id\": 79, \"code\": \"265\", \"zh\": \"马拉维\", \"en\": \"\" },\r\n    { \"id\": 80, \"code\": \"266\", \"zh\": \"莱索托\", \"en\": \"\" },\r\n    { \"id\": 81, \"code\": \"267\", \"zh\": \"博茨瓦纳\", \"en\": \"\" },\r\n    { \"id\": 82, \"code\": \"268\", \"zh\": \"斯威士兰\", \"en\": \"\" },\r\n    { \"id\": 83, \"code\": \"269\", \"zh\": \"科摩罗\", \"en\": \"\" },\r\n    { \"id\": 84, \"code\": \"269\", \"zh\": \"马约特\", \"en\": \"\" },\r\n    { \"id\": 85, \"code\": \"27\", \"zh\": \"南非\", \"en\": \"\" },\r\n    { \"id\": 86, \"code\": \"290\", \"zh\": \"圣赫勒拿\", \"en\": \"\" },\r\n    { \"id\": 87, \"code\": \"291\", \"zh\": \"厄立特里亚\", \"en\": \"\" },\r\n    { \"id\": 88, \"code\": \"297\", \"zh\": \"阿鲁巴\", \"en\": \"\" },\r\n    { \"id\": 89, \"code\": \"298\", \"zh\": \"法罗群岛\", \"en\": \"\" },\r\n    { \"id\": 90, \"code\": \"299\", \"zh\": \"格陵兰\", \"en\": \"\" },\r\n    { \"id\": 91, \"code\": \"30\", \"zh\": \"希腊\", \"en\": \"\" },\r\n    { \"id\": 92, \"code\": \"31\", \"zh\": \"荷兰\", \"en\": \"\" },\r\n    { \"id\": 93, \"code\": \"32\", \"zh\": \"比利时\", \"en\": \"\" },\r\n    { \"id\": 94, \"code\": \"33\", \"zh\": \"法国\", \"en\": \"\" },\r\n    { \"id\": 95, \"code\": \"34\", \"zh\": \"西班牙\", \"en\": \"\" },\r\n    { \"id\": 96, \"code\": \"350\", \"zh\": \"直布罗陀\", \"en\": \"\" },\r\n    { \"id\": 97, \"code\": \"351\", \"zh\": \"葡萄牙\", \"en\": \"\" },\r\n    { \"id\": 98, \"code\": \"352\", \"zh\": \"卢森堡\", \"en\": \"\" },\r\n    { \"id\": 99, \"code\": \"353\", \"zh\": \"爱尔兰\", \"en\": \"\" },\r\n    { \"id\": 100, \"code\": \"354\", \"zh\": \"冰岛\", \"en\": \"\" },\r\n    { \"id\": 101, \"code\": \"355\", \"zh\": \"阿尔巴尼亚\", \"en\": \"\" },\r\n    { \"id\": 102, \"code\": \"356\", \"zh\": \"马耳他\", \"en\": \"\" },\r\n    { \"id\": 103, \"code\": \"357\", \"zh\": \"塞浦路斯\", \"en\": \"\" },\r\n    { \"id\": 104, \"code\": \"358\", \"zh\": \"芬兰\", \"en\": \"\" },\r\n    { \"id\": 105, \"code\": \"359\", \"zh\": \"保加利亚\", \"en\": \"\" },\r\n    { \"id\": 106, \"code\": \"36\", \"zh\": \"匈牙利\", \"en\": \"\" },\r\n    { \"id\": 107, \"code\": \"37\", \"zh\": \"东德\", \"en\": \"\" },\r\n    { \"id\": 108, \"code\": \"370\", \"zh\": \"立陶宛\", \"en\": \"\" },\r\n    { \"id\": 109, \"code\": \"371\", \"zh\": \"拉脱维亚\", \"en\": \"\" },\r\n    { \"id\": 110, \"code\": \"372\", \"zh\": \"爱沙尼亚\", \"en\": \"\" },\r\n    { \"id\": 111, \"code\": \"373\", \"zh\": \"摩尔多瓦\", \"en\": \"\" },\r\n    { \"id\": 112, \"code\": \"374\", \"zh\": \"亚美尼亚\", \"en\": \"\" },\r\n    { \"id\": 113, \"code\": \"375\", \"zh\": \"白俄罗斯\", \"en\": \"\" },\r\n    { \"id\": 114, \"code\": \"376\", \"zh\": \"安道尔\", \"en\": \"\" },\r\n    { \"id\": 115, \"code\": \"377\", \"zh\": \"摩纳哥\", \"en\": \"\" },\r\n    { \"id\": 116, \"code\": \"378\", \"zh\": \"圣马力诺\", \"en\": \"\" },\r\n    { \"id\": 117, \"code\": \"379\", \"zh\": \"梵蒂冈\", \"en\": \"\" },\r\n    { \"id\": 118, \"code\": \"38\", \"zh\": \"南斯拉夫\", \"en\": \"\" },\r\n    { \"id\": 119, \"code\": \"380\", \"zh\": \"乌克兰\", \"en\": \"\" },\r\n    { \"id\": 120, \"code\": \"381\", \"zh\": \"塞尔维亚\", \"en\": \"\" },\r\n    { \"id\": 121, \"code\": \"382\", \"zh\": \"黑山\", \"en\": \"\" },\r\n    { \"id\": 122, \"code\": \"385\", \"zh\": \"克罗地亚\", \"en\": \"\" },\r\n    { \"id\": 123, \"code\": \"386\", \"zh\": \"斯洛文尼亚\", \"en\": \"\" },\r\n    { \"id\": 124, \"code\": \"387\", \"zh\": \"波黑\", \"en\": \"\" },\r\n    { \"id\": 125, \"code\": \"388\", \"zh\": \"欧洲电话号码空间(环欧洲服务)\", \"en\": \"\" },\r\n    { \"id\": 126, \"code\": \"389\", \"zh\": \"马其顿\", \"en\": \"\" },\r\n    { \"id\": 127, \"code\": \"39\", \"zh\": \"意大利\", \"en\": \"\" },\r\n    { \"id\": 128, \"code\": \"40\", \"zh\": \"罗马尼亚\", \"en\": \"\" },\r\n    { \"id\": 129, \"code\": \"41\", \"zh\": \"瑞士\", \"en\": \"\" },\r\n    { \"id\": 130, \"code\": \"42\", \"zh\": \"捷克斯洛伐克\", \"en\": \"\" },\r\n    { \"id\": 131, \"code\": \"420\", \"zh\": \"捷克共和国\", \"en\": \"\" },\r\n    { \"id\": 132, \"code\": \"421\", \"zh\": \"斯洛伐克\", \"en\": \"\" },\r\n    { \"id\": 133, \"code\": \"423\", \"zh\": \"列支敦士登\", \"en\": \"\" },\r\n    { \"id\": 134, \"code\": \"43\", \"zh\": \"奥地利\", \"en\": \"\" },\r\n    { \"id\": 135, \"code\": \"44\", \"zh\": \"英国\", \"en\": \"\" },\r\n    { \"id\": 136, \"code\": \"45\", \"zh\": \"丹麦\", \"en\": \"\" },\r\n    { \"id\": 137, \"code\": \"46\", \"zh\": \"瑞典\", \"en\": \"\" },\r\n    { \"id\": 138, \"code\": \"47\", \"zh\": \"挪威\", \"en\": \"\" },\r\n    { \"id\": 139, \"code\": \"48\", \"zh\": \"波兰\", \"en\": \"\" },\r\n    { \"id\": 140, \"code\": \"49\", \"zh\": \"德国\", \"en\": \"\" },\r\n    { \"id\": 141, \"code\": \"500\", \"zh\": \"福克兰群岛\", \"en\": \"\" },\r\n    { \"id\": 142, \"code\": \"501\", \"zh\": \"伯利兹\", \"en\": \"\" },\r\n    { \"id\": 143, \"code\": \"502\", \"zh\": \"危地马拉\", \"en\": \"\" },\r\n    { \"id\": 144, \"code\": \"503\", \"zh\": \"萨尔瓦多\", \"en\": \"\" },\r\n    { \"id\": 145, \"code\": \"504\", \"zh\": \"洪都拉斯\", \"en\": \"\" },\r\n    { \"id\": 146, \"code\": \"505\", \"zh\": \"尼加拉瓜\", \"en\": \"\" },\r\n    { \"id\": 147, \"code\": \"506\", \"zh\": \"哥斯达黎加\", \"en\": \"\" },\r\n    { \"id\": 148, \"code\": \"507\", \"zh\": \"巴拿马\", \"en\": \"\" },\r\n    { \"id\": 149, \"code\": \"508\", \"zh\": \"圣皮埃尔\", \"en\": \"\" },\r\n    { \"id\": 150, \"code\": \"508\", \"zh\": \"密克隆群岛\", \"en\": \"\" },\r\n    { \"id\": 151, \"code\": \"509\", \"zh\": \"海地\", \"en\": \"\" },\r\n    { \"id\": 152, \"code\": \"51\", \"zh\": \"秘鲁\", \"en\": \"\" },\r\n    { \"id\": 153, \"code\": \"52\", \"zh\": \"墨西哥\", \"en\": \"\" },\r\n    { \"id\": 154, \"code\": \"53\", \"zh\": \"古巴\", \"en\": \"\" },\r\n    { \"id\": 155, \"code\": \"54\", \"zh\": \"阿根廷\", \"en\": \"\" },\r\n    { \"id\": 156, \"code\": \"55\", \"zh\": \"巴西\", \"en\": \"\" },\r\n    { \"id\": 157, \"code\": \"56\", \"zh\": \"智利\", \"en\": \"\" },\r\n    { \"id\": 158, \"code\": \"57\", \"zh\": \"哥伦比亚\", \"en\": \"\" },\r\n    { \"id\": 159, \"code\": \"58\", \"zh\": \"委内瑞拉\", \"en\": \"\" },\r\n    { \"id\": 160, \"code\": \"590\", \"zh\": \"瓜德罗普\", \"en\": \"\" },\r\n    { \"id\": 161, \"code\": \"590\", \"zh\": \"法属圣马丁\", \"en\": \"\" },\r\n    { \"id\": 162, \"code\": \"590\", \"zh\": \"法属圣巴泰勒米岛\", \"en\": \"\" },\r\n    { \"id\": 163, \"code\": \"591\", \"zh\": \"玻利维亚\", \"en\": \"\" },\r\n    { \"id\": 164, \"code\": \"592\", \"zh\": \"圭亚那\", \"en\": \"\" },\r\n    { \"id\": 165, \"code\": \"593\", \"zh\": \"厄瓜多尔\", \"en\": \"\" },\r\n    { \"id\": 166, \"code\": \"594\", \"zh\": \"法属圭亚那\", \"en\": \"\" },\r\n    { \"id\": 167, \"code\": \"595\", \"zh\": \"巴拉圭\", \"en\": \"\" },\r\n    { \"id\": 168, \"code\": \"596\", \"zh\": \"马提尼克\", \"en\": \"\" },\r\n    { \"id\": 169, \"code\": \"597\", \"zh\": \"苏里南\", \"en\": \"\" },\r\n    { \"id\": 170, \"code\": \"598\", \"zh\": \"乌拉圭\", \"en\": \"\" },\r\n    { \"id\": 171, \"code\": \"599\", \"zh\": \"荷属安的列斯\", \"en\": \"\" },\r\n    { \"id\": 172, \"code\": \"599\", \"zh\": \"荷属圣马丁\", \"en\": \"\" },\r\n    { \"id\": 173, \"code\": \"599-9\", \"zh\": \"库拉索\", \"en\": \"\" },\r\n    { \"id\": 174, \"code\": \"60\", \"zh\": \"马来西亚\", \"en\": \"\" },\r\n    { \"id\": 175, \"code\": \"61\", \"zh\": \"澳大利亚\", \"en\": \"\" },\r\n    { \"id\": 176, \"code\": \"62\", \"zh\": \"印度尼西亚\", \"en\": \"\" },\r\n    { \"id\": 177, \"code\": \"63\", \"zh\": \"菲律宾\", \"en\": \"\" },\r\n    { \"id\": 178, \"code\": \"64\", \"zh\": \"新西兰\", \"en\": \"\" },\r\n    { \"id\": 179, \"code\": \"65\", \"zh\": \"新加坡\", \"en\": \"\" },\r\n    { \"id\": 180, \"code\": \"66\", \"zh\": \"泰国\", \"en\": \"\" },\r\n    { \"id\": 181, \"code\": \"670\", \"zh\": \"东帝汶\", \"en\": \"\" },\r\n    { \"id\": 182, \"code\": \"672\", \"zh\": \"澳大利亚属南极洲\", \"en\": \"\" },\r\n    { \"id\": 183, \"code\": \"672\", \"zh\": \"澳大利亚属圣诞岛\", \"en\": \"\" },\r\n    { \"id\": 184, \"code\": \"672\", \"zh\": \"澳大利亚属科科斯群岛\", \"en\": \"\" },\r\n    { \"id\": 185, \"code\": \"672\", \"zh\": \"诺福克岛\", \"en\": \"\" },\r\n    { \"id\": 186, \"code\": \"673\", \"zh\": \"文莱\", \"en\": \"\" },\r\n    { \"id\": 187, \"code\": \"674\", \"zh\": \"瑙鲁\", \"en\": \"\" },\r\n    { \"id\": 188, \"code\": \"675\", \"zh\": \"巴布亚新几内亚\", \"en\": \"\" },\r\n    { \"id\": 189, \"code\": \"676\", \"zh\": \"汤加\", \"en\": \"\" },\r\n    { \"id\": 190, \"code\": \"677\", \"zh\": \"所罗门群岛\", \"en\": \"\" },\r\n    { \"id\": 191, \"code\": \"678\", \"zh\": \"瓦努阿图\", \"en\": \"\" },\r\n    { \"id\": 192, \"code\": \"679\", \"zh\": \"斐济\", \"en\": \"\" },\r\n    { \"id\": 193, \"code\": \"680\", \"zh\": \"帕劳\", \"en\": \"\" },\r\n    { \"id\": 194, \"code\": \"681\", \"zh\": \"瓦利斯\", \"en\": \"\" },\r\n    { \"id\": 195, \"code\": \"681\", \"zh\": \"富图纳群岛\", \"en\": \"\" },\r\n    { \"id\": 196, \"code\": \"682\", \"zh\": \"库克群岛\", \"en\": \"\" },\r\n    { \"id\": 197, \"code\": \"683\", \"zh\": \"纽埃\", \"en\": \"\" },\r\n    { \"id\": 198, \"code\": \"685\", \"zh\": \"萨摩亚\", \"en\": \"\" },\r\n    { \"id\": 199, \"code\": \"686\", \"zh\": \"基里巴斯\", \"en\": \"\" },\r\n    { \"id\": 200, \"code\": \"686\", \"zh\": \"吉尔伯特群岛\", \"en\": \"\" },\r\n    { \"id\": 201, \"code\": \"687\", \"zh\": \"新喀里多尼亚\", \"en\": \"\" },\r\n    { \"id\": 202, \"code\": \"688\", \"zh\": \"图瓦卢\", \"en\": \"\" },\r\n    { \"id\": 203, \"code\": \"688\", \"zh\": \"埃利斯群岛\", \"en\": \"\" },\r\n    { \"id\": 204, \"code\": \"689\", \"zh\": \"法属波利尼西亚\", \"en\": \"\" },\r\n    { \"id\": 205, \"code\": \"690\", \"zh\": \"托克劳群岛\", \"en\": \"\" },\r\n    { \"id\": 206, \"code\": \"691\", \"zh\": \"密克罗尼西亚联邦\", \"en\": \"\" },\r\n    { \"id\": 207, \"code\": \"692\", \"zh\": \"马绍尔群岛\", \"en\": \"\" },\r\n    { \"id\": 208, \"code\": \"7\", \"zh\": \"俄罗斯\", \"en\": \"\" },\r\n    { \"id\": 209, \"code\": \"81\", \"zh\": \"日本\", \"en\": \"\" },\r\n    { \"id\": 210, \"code\": \"82\", \"zh\": \"韩国\", \"en\": \"\" },\r\n    { \"id\": 211, \"code\": \"84\", \"zh\": \"越南\", \"en\": \"\" },\r\n    { \"id\": 212, \"code\": \"850\", \"zh\": \"朝鲜\", \"en\": \"\" },\r\n    { \"id\": 213, \"code\": \"852\", \"zh\": \"中国香港\", \"en\": \"\" },\r\n    { \"id\": 214, \"code\": \"853\", \"zh\": \"中国澳门\", \"en\": \"\" },\r\n    { \"id\": 215, \"code\": \"855\", \"zh\": \"柬埔寨\", \"en\": \"\" },\r\n    { \"id\": 216, \"code\": \"856\", \"zh\": \"老挝\", \"en\": \"\" },\r\n    { \"id\": 217, \"code\": \"86\", \"zh\": \"中国\", \"en\": \"\" },\r\n    { \"id\": 218, \"code\": \"870\", \"zh\": \"国际海事卫星组织(SNAC)卫星电话\", \"en\": \"SNAC\" },\r\n    { \"id\": 219, \"code\": \"878\", \"zh\": \"环球个人通讯服务\", \"en\": \"\" },\r\n    { \"id\": 220, \"code\": \"880\", \"zh\": \"孟加拉国\", \"en\": \"\" },\r\n    { \"id\": 221, \"code\": \"881\", \"zh\": \"移动卫星系统\", \"en\": \"\" },\r\n    { \"id\": 222, \"code\": \"882\", \"zh\": \"国际网络\", \"en\": \"\" },\r\n    { \"id\": 223, \"code\": \"886\", \"zh\": \"中国台湾\", \"en\": \"\" },\r\n    { \"id\": 224, \"code\": \"90\", \"zh\": \"土耳其\", \"en\": \"\" },\r\n    { \"id\": 225, \"code\": \"91\", \"zh\": \"印度\", \"en\": \"\" },\r\n    { \"id\": 226, \"code\": \"92\", \"zh\": \"巴基斯坦\", \"en\": \"\" },\r\n    { \"id\": 227, \"code\": \"93\", \"zh\": \"阿富汗\", \"en\": \"\" },\r\n    { \"id\": 228, \"code\": \"94\", \"zh\": \"斯里兰卡\", \"en\": \"\" },\r\n    { \"id\": 229, \"code\": \"95\", \"zh\": \"缅甸\", \"en\": \"\" },\r\n    { \"id\": 230, \"code\": \"960\", \"zh\": \"马尔代夫\", \"en\": \"\" },\r\n    { \"id\": 231, \"code\": \"961\", \"zh\": \"黎巴嫩\", \"en\": \"\" },\r\n    { \"id\": 232, \"code\": \"962\", \"zh\": \"约旦\", \"en\": \"\" },\r\n    { \"id\": 233, \"code\": \"963\", \"zh\": \"叙利亚\", \"en\": \"\" },\r\n    { \"id\": 234, \"code\": \"964\", \"zh\": \"伊拉克\", \"en\": \"\" },\r\n    { \"id\": 235, \"code\": \"965\", \"zh\": \"科威特\", \"en\": \"\" },\r\n    { \"id\": 236, \"code\": \"966\", \"zh\": \"沙特阿拉伯\", \"en\": \"\" },\r\n    { \"id\": 237, \"code\": \"967\", \"zh\": \"也门\", \"en\": \"\" },\r\n    { \"id\": 238, \"code\": \"968\", \"zh\": \"阿曼\", \"en\": \"\" },\r\n    { \"id\": 239, \"code\": \"969\", \"zh\": \"也门民主共和国\", \"en\": \"\" },\r\n    { \"id\": 240, \"code\": \"970\", \"zh\": \"巴勒斯坦\", \"en\": \"\" },\r\n    { \"id\": 241, \"code\": \"971\", \"zh\": \"阿拉伯联合酋长国\", \"en\": \"\" },\r\n    { \"id\": 242, \"code\": \"972\", \"zh\": \"以色列\", \"en\": \"\" },\r\n    { \"id\": 243, \"code\": \"973\", \"zh\": \"巴林\", \"en\": \"\" },\r\n    { \"id\": 244, \"code\": \"974\", \"zh\": \"卡塔尔\", \"en\": \"\" },\r\n    { \"id\": 245, \"code\": \"975\", \"zh\": \"不丹\", \"en\": \"\" },\r\n    { \"id\": 246, \"code\": \"976\", \"zh\": \"蒙古\", \"en\": \"\" },\r\n    { \"id\": 247, \"code\": \"977\", \"zh\": \"尼泊尔\", \"en\": \"\" },\r\n    { \"id\": 248, \"code\": \"979\", \"zh\": \"国际费率服务\", \"en\": \"International Premium Rate Service\" },\r\n    { \"id\": 249, \"code\": \"98\", \"zh\": \"伊朗\", \"en\": \"\" },\r\n    { \"id\": 250, \"code\": \"991\", \"zh\": \"国际电信公众通信服务试验\", \"en\": \"International Telecommunications Public Correspondence Service trial,ITPCS\" },\r\n    { \"id\": 251, \"code\": \"992\", \"zh\": \"塔吉克斯坦\", \"en\": \"\" },\r\n    { \"id\": 252, \"code\": \"993\", \"zh\": \"土库曼斯坦\", \"en\": \"\" },\r\n    { \"id\": 253, \"code\": \"994\", \"zh\": \"阿塞拜疆\", \"en\": \"\" },\r\n    { \"id\": 254, \"code\": \"995\", \"zh\": \"格鲁吉亚\", \"en\": \"\" },\r\n    { \"id\": 255, \"code\": \"996\", \"zh\": \"吉尔吉斯斯坦\", \"en\": \"\" },\r\n    { \"id\": 256, \"code\": \"997\", \"zh\": \"哈萨克斯坦\", \"en\": \"\" },\r\n    { \"id\": 257, \"code\": \"998\", \"zh\": \"乌兹别克斯坦\", \"en\": \"\" }\r\n]","class eventManager {\r\n    private static singe: eventManager = null\r\n    public static get ins(): eventManager { if (this.singe == null) { this.singe = new eventManager(); } return this.singe; }\r\n\r\n    private events: { name: string, cb: Function, cbo: any, once: boolean }[] = []\r\n\r\n    /**\r\n     * 注册事件\r\n     * @param name 事件名称\r\n     * @param cb 事件回调函数\r\n     * @param cbo 事件回调者\r\n     */\r\n    public on(name: string, cb: Function, cbo?: any) {\r\n        if (!this.events) { this.events = [] };\r\n        if (name && cb) {\r\n            this.events.push({ name: name, cb: cb, cbo: cbo, once: false });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 只调用一次的事件注册\r\n     * @param name 事件名称\r\n     * @param cb 事件回调函数\r\n     * @param cbo 事件回调者\r\n     */\r\n    public once(name: string, cb: Function, cbo?: any) {\r\n        if (!this.events) { this.events = [] };\r\n        if (name && cb) {\r\n            this.events.push({ name: name, cb: cb, cbo: cbo, once: true });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 发送数据\r\n     * @param name 事件名称 \r\n     * @param data 事件数据\r\n     * @returns \r\n     */\r\n    public emit(name: string, data?: any) {\r\n        if (!this.events || this.events.length == 0) { cc.error(\"unknown event\"); return; }\r\n\r\n        for (let i = 0; i < this.events.length; i++) {\r\n            let evt: { name: string, cb: Function, cbo: any, once: boolean } = this.events[i];\r\n            if (evt.name == name && evt.cb) {\r\n                if (evt.cbo) {\r\n                    evt.cb.apply(evt.cbo, [data]);\r\n                } else {\r\n                    evt.cb(data);\r\n                }\r\n            }\r\n\r\n            if (evt.once) {\r\n                this.events.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public off(name: string, cb: Function, cbo?: any) {\r\n        if (!this.events || this.events.length == 0) { cc.error(\"unknown event\"); return; }\r\n\r\n        for (let i = 0; i < this.events.length; i++) {\r\n            let evt: { name: string, cb: Function, cbo: any, once: boolean } = this.events[i];\r\n            if (evt.name == name && cb == evt.cb) {\r\n                this.events.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const EventManger = eventManager.ins;","/******************************************\r\n * @author kL <klk0@qq.com>\r\n * @date 2019/6/6\r\n * @doc 列表Item组件.\r\n * 说明：\r\n *      1、此组件须配合List组件使用。（配套的配套的..）\r\n * @end\r\n ******************************************/\r\nconst { ccclass, property, disallowMultiple, menu, executionOrder } = cc._decorator;\r\n\r\nimport List from './List';\r\n\r\nenum SelectedType {\r\n    NONE = 0,\r\n    TOGGLE = 1,\r\n    SWITCH = 2,\r\n}\r\n\r\n@ccclass\r\n@disallowMultiple()\r\n@menu('自定义组件/List Item')\r\n@executionOrder(-5001)          //先于List\r\nexport default class ListItem extends cc.Component {\r\n    //图标\r\n    @property({ type: cc.Sprite, tooltip: CC_DEV && '图标' })\r\n    icon: cc.Sprite = null;\r\n    //标题\r\n    @property({ type: cc.Node, tooltip: CC_DEV && '标题' })\r\n    title: cc.Node = null;\r\n    //选择模式\r\n    @property({\r\n        type: cc.Enum(SelectedType),\r\n        tooltip: CC_DEV && '选择模式'\r\n    })\r\n    selectedMode: SelectedType = SelectedType.NONE;\r\n    //被选标志\r\n    @property({\r\n        type: cc.Node, tooltip: CC_DEV && '被选标识',\r\n        visible() { return this.selectedMode > SelectedType.NONE }\r\n    })\r\n    selectedFlag: cc.Node = null;\r\n    //被选择的SpriteFrame\r\n    @property({\r\n        type: cc.SpriteFrame, tooltip: CC_DEV && '被选择的SpriteFrame',\r\n        visible() { return this.selectedMode == SelectedType.SWITCH }\r\n    })\r\n    selectedSpriteFrame: cc.SpriteFrame = null;\r\n    //未被选择的SpriteFrame\r\n    _unselectedSpriteFrame: cc.SpriteFrame = null;\r\n    //自适应尺寸\r\n    @property({\r\n        tooltip: CC_DEV && '自适应尺寸（宽或高）',\r\n    })\r\n    adaptiveSize: boolean = false;\r\n    //选择\r\n    _selected: boolean = false;\r\n    set selected(val: boolean) {\r\n        this._selected = val;\r\n        if (!this.selectedFlag)\r\n            return;\r\n        switch (this.selectedMode) {\r\n            case SelectedType.TOGGLE:\r\n                this.selectedFlag.active = val;\r\n                break;\r\n            case SelectedType.SWITCH:\r\n                let sp: cc.Sprite = this.selectedFlag.getComponent(cc.Sprite);\r\n                if (sp) {\r\n                    sp.spriteFrame = val ? this.selectedSpriteFrame : this._unselectedSpriteFrame;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n    //按钮组件\r\n    private _btnCom: any;\r\n    get btnCom() {\r\n        if (!this._btnCom)\r\n            this._btnCom = this.node.getComponent(cc.Button);\r\n        return this._btnCom;\r\n    }\r\n    //依赖的List组件\r\n    public list: List;\r\n    //是否已经注册过事件\r\n    private _eventReg = false;\r\n    //序列id\r\n    public listId: number;\r\n\r\n    onLoad() {\r\n        // //没有按钮组件的话，selectedFlag无效\r\n        // if (!this.btnCom)\r\n        //     this.selectedMode == SelectedType.NONE;\r\n        //有选择模式时，保存相应的东西\r\n        if (this.selectedMode == SelectedType.SWITCH) {\r\n            let com: cc.Sprite = this.selectedFlag.getComponent(cc.Sprite);\r\n            this._unselectedSpriteFrame = com.spriteFrame;\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\r\n    }\r\n\r\n    _registerEvent() {\r\n        if (!this._eventReg) {\r\n            if (this.btnCom && this.list.selectedMode > 0) {\r\n                this.btnCom.clickEvents.unshift(this.createEvt(this, 'onClickThis'));\r\n            }\r\n            if (this.adaptiveSize) {\r\n                this.node.on(cc.Node.EventType.SIZE_CHANGED, this._onSizeChange, this);\r\n            }\r\n            this._eventReg = true;\r\n        }\r\n    }\r\n\r\n    _onSizeChange() {\r\n        this.list._onItemAdaptive(this.node);\r\n    }\r\n    /**\r\n     * 创建事件\r\n     * @param {cc.Component} component 组件脚本\r\n     * @param {string} handlerName 触发函数名称\r\n     * @param {cc.Node} node 组件所在node（不传的情况下取component.node）\r\n     * @returns cc.Component.EventHandler\r\n     */\r\n    createEvt(component: cc.Component, handlerName: string, node: cc.Node = null) {\r\n        if (!component.isValid)\r\n            return;//有些异步加载的，节点以及销毁了。\r\n        component['comName'] = component['comName'] || component.name.match(/\\<(.*?)\\>/g).pop().replace(/\\<|>/g, '');\r\n        let evt = new cc.Component.EventHandler();\r\n        evt.target = node || component.node;\r\n        evt.component = component['comName'];\r\n        evt.handler = handlerName;\r\n        return evt;\r\n    }\r\n\r\n    showAni(aniType: number, callFunc: Function, del: boolean) {\r\n        let t: any = this;\r\n        let tween: cc.Tween;\r\n        switch (aniType) {\r\n            case 0: //向上消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.2, { scale: .7 })\r\n                    .by(.3, { y: t.node.height * 2 });\r\n                break;\r\n            case 1: //向右消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.2, { scale: .7 })\r\n                    .by(.3, { x: t.node.width * 2 });\r\n                break;\r\n            case 2: //向下消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.2, { scale: .7 })\r\n                    .by(.3, { y: t.node.height * -2 });\r\n                break;\r\n            case 3: //向左消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.2, { scale: .7 })\r\n                    .by(.3, { x: t.node.width * -2 });\r\n                break;\r\n            default: //默认：缩小消失\r\n                tween = cc.tween(t.node)\r\n                    .to(.3, { scale: .1 });\r\n                break;\r\n        }\r\n        if (callFunc || del) {\r\n            tween.call(() => {\r\n                if (del) {\r\n                    t.list._delSingleItem(t.node);\r\n                    for (let n: number = t.list.displayData.length - 1; n >= 0; n--) {\r\n                        if (t.list.displayData[n].id == t.listId) {\r\n                            t.list.displayData.splice(n, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                callFunc();\r\n            });\r\n        }\r\n        tween.start();\r\n    }\r\n\r\n    onClickThis() {\r\n        this.list.selectedId = this.listId;\r\n    }\r\n\r\n}\r\n","/******************************************\r\n * @author kL <klk0@qq.com>\r\n * @date 2019/6/6\r\n * @doc 列表组件.\r\n * @end\r\n ******************************************/\r\nconst { ccclass, property, disallowMultiple, menu, executionOrder, requireComponent } = cc._decorator;\r\n\r\nimport ListItem from './ListItem';\r\n\r\nenum TemplateType {\r\n    NODE = 1,\r\n    PREFAB = 2,\r\n}\r\n\r\nenum SlideType {\r\n    NORMAL = 1,//普通\r\n    ADHERING = 2,//粘附模式，将强制关闭滚动惯性\r\n    PAGE = 3,//页面模式，将强制关闭滚动惯性\r\n}\r\n\r\nenum SelectedType {\r\n    NONE = 0,\r\n    SINGLE = 1,//单选\r\n    MULT = 2,//多选\r\n}\r\n\r\n@ccclass\r\n@disallowMultiple()\r\n@menu('自定义组件/List')\r\n@requireComponent(cc.ScrollView)\r\n//脚本生命周期回调的执行优先级。小于 0 的脚本将优先执行，大于 0 的脚本将最后执行。该优先级只对 onLoad, onEnable, start, update 和 lateUpdate 有效，对 onDisable 和 onDestroy 无效。\r\n@executionOrder(-5000)\r\nexport default class List extends cc.Component {\r\n    //模板类型\r\n    @property({ type: cc.Enum(TemplateType), tooltip: CC_DEV && '模板类型', })\r\n    private templateType: TemplateType = TemplateType.NODE;\r\n    //模板Item（Node）\r\n    @property({\r\n        type: cc.Node,\r\n        tooltip: CC_DEV && '模板Item',\r\n        visible() { return this.templateType == TemplateType.NODE; }\r\n    })\r\n    tmpNode: cc.Node = null;\r\n    //模板Item（Prefab）\r\n    @property({\r\n        type: cc.Prefab,\r\n        tooltip: CC_DEV && '模板Item',\r\n        visible() { return this.templateType == TemplateType.PREFAB; }\r\n    })\r\n    tmpPrefab: cc.Prefab = null;\r\n    //滑动模式\r\n    @property()\r\n    private _slideMode: SlideType = SlideType.NORMAL;\r\n    @property({\r\n        type: cc.Enum(SlideType),\r\n        tooltip: CC_DEV && '滑动模式'\r\n    })\r\n    set slideMode(val: SlideType) {\r\n        this._slideMode = val;\r\n    }\r\n    get slideMode() {\r\n        return this._slideMode;\r\n    }\r\n    //翻页作用距离\r\n    @property({\r\n        type: cc.Float,\r\n        range: [0, 1, .1],\r\n        tooltip: CC_DEV && '翻页作用距离',\r\n        slide: true,\r\n        visible() { return this._slideMode == SlideType.PAGE; }\r\n    })\r\n    public pageDistance: number = .3;\r\n    //页面改变事件\r\n    @property({\r\n        type: cc.Component.EventHandler,\r\n        tooltip: CC_DEV && '页面改变事件',\r\n        visible() { return this._slideMode == SlideType.PAGE; }\r\n    })\r\n    private pageChangeEvent: cc.Component.EventHandler = new cc.Component.EventHandler();\r\n    //是否为虚拟列表（动态列表）\r\n    @property()\r\n    private _virtual: boolean = true;\r\n    @property({\r\n        type: cc.Boolean,\r\n        tooltip: CC_DEV && '是否为虚拟列表（动态列表）'\r\n    })\r\n    set virtual(val: boolean) {\r\n        if (val != null)\r\n            this._virtual = val;\r\n        if (!CC_DEV && this._numItems != 0) {\r\n            this._onScrolling();\r\n        }\r\n    }\r\n    get virtual() {\r\n        return this._virtual;\r\n    }\r\n    //是否为循环列表\r\n    @property({\r\n        tooltip: CC_DEV && '是否为循环列表',\r\n        visible() {\r\n            let val: boolean = /*this.virtual &&*/ this.slideMode == SlideType.NORMAL;\r\n            if (!val)\r\n                this.cyclic = false;\r\n            return val;\r\n        }\r\n    })\r\n    public cyclic: boolean = false;\r\n    //缺省居中\r\n    @property({\r\n        tooltip: CC_DEV && 'Item数量不足以填满Content时，是否居中显示Item（不支持Grid布局）',\r\n        visible() { return this.virtual; }\r\n    })\r\n    public lackCenter: boolean = false;\r\n    //缺省可滑动\r\n    @property({\r\n        tooltip: CC_DEV && 'Item数量不足以填满Content时，是否可滑动',\r\n        visible() {\r\n            let val: boolean = this.virtual && !this.lackCenter;\r\n            if (!val)\r\n                this.lackSlide = false;\r\n            return val;\r\n        }\r\n    })\r\n    public lackSlide: boolean = false;\r\n    //刷新频率\r\n    @property({ type: cc.Integer })\r\n    private _updateRate: number = 0;\r\n    @property({\r\n        type: cc.Integer,\r\n        range: [0, 6, 1],\r\n        tooltip: CC_DEV && '刷新频率（值越大刷新频率越低、性能越高）',\r\n        slide: true,\r\n    })\r\n    set updateRate(val: number) {\r\n        if (val >= 0 && val <= 6) {\r\n            this._updateRate = val;\r\n        }\r\n    }\r\n    get updateRate() {\r\n        return this._updateRate;\r\n    }\r\n    //分帧渲染（每帧渲染的Item数量（<=0时关闭分帧渲染））\r\n    @property({\r\n        type: cc.Integer,\r\n        range: [0, 12, 1],\r\n        tooltip: CC_DEV && '逐帧渲染时，每帧渲染的Item数量（<=0时关闭分帧渲染）',\r\n        slide: true,\r\n    })\r\n    public frameByFrameRenderNum: number = 0;\r\n    //渲染事件（渲染器）\r\n    @property({\r\n        type: cc.Component.EventHandler,\r\n        tooltip: CC_DEV && '渲染事件（渲染器）',\r\n    })\r\n    private renderEvent: cc.Component.EventHandler = new cc.Component.EventHandler();\r\n    //选择模式\r\n    @property({\r\n        type: cc.Enum(SelectedType),\r\n        tooltip: CC_DEV && '选择模式'\r\n    })\r\n    public selectedMode: SelectedType = SelectedType.NONE;\r\n    @property({\r\n        tooltip: CC_DEV && '是否重复响应单选事件',\r\n        visible() { return this.selectedMode == SelectedType.SINGLE; }\r\n    })\r\n    public repeatEventSingle: boolean = false;\r\n    //触发选择事件\r\n    @property({\r\n        type: cc.Component.EventHandler,\r\n        tooltip: CC_DEV && '触发选择事件',\r\n        visible() { return this.selectedMode > SelectedType.NONE; }\r\n    })\r\n    private selectedEvent: cc.Component.EventHandler = new cc.Component.EventHandler();\r\n    //当前选择id\r\n    private _selectedId: number = -1;\r\n    private _lastSelectedId: number;\r\n    private multSelected: number[];\r\n    set selectedId(val: number) {\r\n        let t: any = this;\r\n        let item: any;\r\n        switch (t.selectedMode) {\r\n            case SelectedType.SINGLE: {\r\n                if (!t.repeatEventSingle && val == t._selectedId)\r\n                    return;\r\n                item = t.getItemByListId(val);\r\n                // if (!item && val >= 0)\r\n                //     return;\r\n                let listItem: ListItem;\r\n                if (t._selectedId >= 0)\r\n                    t._lastSelectedId = t._selectedId;\r\n                else //如果＜0则取消选择，把_lastSelectedId也置空吧，如果以后有特殊需求再改吧。\r\n                    t._lastSelectedId = null;\r\n                t._selectedId = val;\r\n                if (item) {\r\n                    listItem = item.getComponent(ListItem);\r\n                    listItem.selected = true;\r\n                }\r\n                if (t._lastSelectedId >= 0 && t._lastSelectedId != t._selectedId) {\r\n                    let lastItem: any = t.getItemByListId(t._lastSelectedId);\r\n                    if (lastItem) {\r\n                        lastItem.getComponent(ListItem).selected = false;\r\n                    }\r\n                }\r\n                if (t.selectedEvent) {\r\n                    cc.Component.EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems));\r\n                }\r\n                break;\r\n            }\r\n            case SelectedType.MULT: {\r\n                item = t.getItemByListId(val);\r\n                if (!item)\r\n                    return;\r\n                let listItem = item.getComponent(ListItem);\r\n                if (t._selectedId >= 0)\r\n                    t._lastSelectedId = t._selectedId;\r\n                t._selectedId = val;\r\n                let bool: boolean = !listItem.selected;\r\n                listItem.selected = bool;\r\n                let sub: number = t.multSelected.indexOf(val);\r\n                if (bool && sub < 0) {\r\n                    t.multSelected.push(val);\r\n                } else if (!bool && sub >= 0) {\r\n                    t.multSelected.splice(sub, 1);\r\n                }\r\n                if (t.selectedEvent) {\r\n                    cc.Component.EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId == null ? null : (t._lastSelectedId % this._actualNumItems), bool);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    get selectedId() {\r\n        return this._selectedId;\r\n    }\r\n    private _forceUpdate: boolean = false;\r\n    private _align: number;\r\n    private _horizontalDir: number;\r\n    private _verticalDir: number;\r\n    private _startAxis: number;\r\n    private _alignCalcType: number;\r\n    public content: cc.Node;\r\n    private firstListId: number;\r\n    public displayItemNum: number;\r\n    private _updateDone: boolean = true;\r\n    private _updateCounter: number;\r\n    public _actualNumItems: number;\r\n    private _cyclicNum: number;\r\n    private _cyclicPos1: number;\r\n    private _cyclicPos2: number;\r\n    //列表数量\r\n    @property({\r\n        serializable: false\r\n    })\r\n    private _numItems: number = 0;\r\n    set numItems(val: number) {\r\n        let t = this;\r\n        if (!t.checkInited(false))\r\n            return;\r\n        if (val == null || val < 0) {\r\n            cc.error('numItems set the wrong::', val);\r\n            return;\r\n        }\r\n        t._actualNumItems = t._numItems = val;\r\n        t._forceUpdate = true;\r\n\r\n        if (t._virtual) {\r\n            t._resizeContent();\r\n            if (t.cyclic) {\r\n                t._numItems = t._cyclicNum * t._numItems;\r\n            }\r\n            t._onScrolling();\r\n            if (!t.frameByFrameRenderNum && t.slideMode == SlideType.PAGE)\r\n                t.curPageNum = t.nearestListId;\r\n        } else {\r\n            if (t.cyclic) {\r\n                t._resizeContent();\r\n                t._numItems = t._cyclicNum * t._numItems;\r\n            }\r\n            let layout: cc.Layout = t.content.getComponent(cc.Layout);\r\n            if (layout) {\r\n                layout.enabled = true;\r\n            }\r\n            t._delRedundantItem();\r\n\r\n            t.firstListId = 0;\r\n            if (t.frameByFrameRenderNum > 0) {\r\n                //先渲染几个出来\r\n                let len: number = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum;\r\n                for (let n: number = 0; n < len; n++) {\r\n                    t._createOrUpdateItem2(n);\r\n                }\r\n                if (t.frameByFrameRenderNum < t._numItems) {\r\n                    t._updateCounter = t.frameByFrameRenderNum;\r\n                    t._updateDone = false;\r\n                }\r\n            } else {\r\n                for (let n: number = 0; n < t._numItems; n++) {\r\n                    t._createOrUpdateItem2(n);\r\n                }\r\n                t.displayItemNum = t._numItems;\r\n            }\r\n        }\r\n    }\r\n    get numItems() {\r\n        return this._actualNumItems;\r\n    }\r\n\r\n    private _inited: boolean = false;\r\n    private _scrollView: cc.ScrollView;\r\n    get scrollView() {\r\n        return this._scrollView;\r\n    }\r\n    private _layout: cc.Layout;\r\n    private _resizeMode: cc.Layout.ResizeMode;\r\n    private _topGap: number;\r\n    private _rightGap: number;\r\n    private _bottomGap: number;\r\n    private _leftGap: number;\r\n\r\n    private _columnGap: number;\r\n    private _lineGap: number;\r\n    private _colLineNum: number;\r\n\r\n    private _lastDisplayData: number[];\r\n    public displayData: any[];\r\n    private _pool: cc.NodePool;\r\n\r\n    private _itemTmp: any;\r\n    private _needUpdateWidget: boolean = false;\r\n    private _itemSize: cc.Size;\r\n    private _sizeType: boolean;\r\n\r\n    public _customSize: any;\r\n\r\n    private frameCount: number;\r\n    private _aniDelRuning: boolean = false;\r\n    private _aniDelCB: Function;\r\n    private _aniDelItem: any;\r\n    private _aniDelBeforePos: cc.Vec2;\r\n    private _aniDelBeforeScale: number;\r\n    private viewTop: number;\r\n    private viewRight: number;\r\n    private viewBottom: number;\r\n    private viewLeft: number;\r\n\r\n    private _doneAfterUpdate: boolean = false;\r\n\r\n    private elasticTop: number;\r\n    private elasticRight: number;\r\n    private elasticBottom: number;\r\n    private elasticLeft: number;\r\n\r\n    private scrollToListId: number;\r\n\r\n    private adhering: boolean = false;\r\n\r\n    private _adheringBarrier: boolean = false;\r\n    private nearestListId: number;\r\n\r\n    public curPageNum: number = 0;\r\n    private _beganPos: number;\r\n    private _scrollPos: number;\r\n    private curScrollIsTouch: boolean;//当前滑动是否为手动\r\n\r\n    private _scrollToListId: number;\r\n    private _scrollToEndTime: number;\r\n    private _scrollToSo: any;\r\n\r\n    private _lack: boolean;\r\n    private _allItemSize: number;\r\n    private _allItemSizeNoEdge: number;\r\n\r\n    private _scrollItem: any;//当前控制 ScrollView 滚动的 Item\r\n\r\n    //----------------------------------------------------------------------------\r\n\r\n    onLoad() {\r\n        this._init();\r\n    }\r\n\r\n    onDestroy() {\r\n        let t: any = this;\r\n        if (cc.isValid(t._itemTmp))\r\n            t._itemTmp.destroy();\r\n        if (cc.isValid(t.tmpNode))\r\n            t.tmpNode.destroy();\r\n        t._pool && t._pool.clear();\r\n    }\r\n\r\n    onEnable() {\r\n        // if (!CC_EDITOR) \r\n        this._registerEvent();\r\n        this._init();\r\n        // 处理重新显示后，有可能上一次的动画移除还未播放完毕，导致动画卡住的问题\r\n        if (this._aniDelRuning) {\r\n            this._aniDelRuning = false;\r\n            if (this._aniDelItem) {\r\n                if (this._aniDelBeforePos) {\r\n                    this._aniDelItem.position = this._aniDelBeforePos;\r\n                    delete this._aniDelBeforePos;\r\n                }\r\n                if (this._aniDelBeforeScale) {\r\n                    this._aniDelItem.scale = this._aniDelBeforeScale;\r\n                    delete this._aniDelBeforeScale;\r\n                }\r\n                delete this._aniDelItem;\r\n            }\r\n            if (this._aniDelCB) {\r\n                this._aniDelCB();\r\n                delete this._aniDelCB;\r\n            }\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        // if (!CC_EDITOR) \r\n        this._unregisterEvent();\r\n    }\r\n    //注册事件\r\n    _registerEvent() {\r\n        let t: any = this;\r\n        t.node.on(cc.Node.EventType.TOUCH_START, t._onTouchStart, t, true);\r\n        t.node.on('touch-up', t._onTouchUp, t);\r\n        t.node.on(cc.Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\r\n        t.node.on('scroll-began', t._onScrollBegan, t, true);\r\n        t.node.on('scroll-ended', t._onScrollEnded, t, true);\r\n        t.node.on('scrolling', t._onScrolling, t, true);\r\n        t.node.on(cc.Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\r\n    }\r\n    //卸载事件\r\n    _unregisterEvent() {\r\n        let t: any = this;\r\n        t.node.off(cc.Node.EventType.TOUCH_START, t._onTouchStart, t, true);\r\n        t.node.off('touch-up', t._onTouchUp, t);\r\n        t.node.off(cc.Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\r\n        t.node.off('scroll-began', t._onScrollBegan, t, true);\r\n        t.node.off('scroll-ended', t._onScrollEnded, t, true);\r\n        t.node.off('scrolling', t._onScrolling, t, true);\r\n        t.node.off(cc.Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\r\n    }\r\n    //初始化各种..\r\n    _init() {\r\n        let t: any = this;\r\n        if (t._inited)\r\n            return;\r\n\r\n        t._scrollView = t.node.getComponent(cc.ScrollView);\r\n\r\n        t.content = t._scrollView.content;\r\n        if (!t.content) {\r\n            cc.error(t.node.name + \"'s cc.ScrollView unset content!\");\r\n            return;\r\n        }\r\n\r\n        t._layout = t.content.getComponent(cc.Layout);\r\n\r\n        t._align = t._layout.type; //排列模式\r\n        t._resizeMode = t._layout.resizeMode; //自适应模式\r\n        t._startAxis = t._layout.startAxis;\r\n\r\n        t._topGap = t._layout.paddingTop; //顶边距\r\n        t._rightGap = t._layout.paddingRight; //右边距\r\n        t._bottomGap = t._layout.paddingBottom; //底边距\r\n        t._leftGap = t._layout.paddingLeft; //左边距\r\n\r\n        t._columnGap = t._layout.spacingX; //列距\r\n        t._lineGap = t._layout.spacingY; //行距\r\n\r\n        t._colLineNum; //列数或行数（非GRID模式则=1，表示单列或单行）;\r\n\r\n        t._verticalDir = t._layout.verticalDirection; //垂直排列子节点的方向\r\n        t._horizontalDir = t._layout.horizontalDirection; //水平排列子节点的方向\r\n\r\n        t.setTemplateItem(cc.instantiate(t.templateType == TemplateType.PREFAB ? t.tmpPrefab : t.tmpNode));\r\n\r\n        // 特定的滑动模式处理\r\n        if (t._slideMode == SlideType.ADHERING || t._slideMode == SlideType.PAGE) {\r\n            t._scrollView.inertia = false;\r\n            t._scrollView._onMouseWheel = function () {\r\n                return;\r\n            };\r\n        }\r\n        if (!t.virtual)         // lackCenter 仅支持 Virtual 模式\r\n            t.lackCenter = false;\r\n\r\n        t._lastDisplayData = []; //最后一次刷新的数据\r\n        t.displayData = []; //当前数据\r\n        t._pool = new cc.NodePool();    //这是个池子..\r\n        t._forceUpdate = false;         //是否强制更新\r\n        t._updateCounter = 0;           //当前分帧渲染帧数\r\n        t._updateDone = true;           //分帧渲染是否完成\r\n\r\n        t.curPageNum = 0;               //当前页数\r\n\r\n        if (t.cyclic || 0) {\r\n            t._scrollView._processAutoScrolling = this._processAutoScrolling.bind(t);\r\n            t._scrollView._startBounceBackIfNeeded = function () {\r\n                return false;\r\n            }\r\n            // t._scrollView._scrollChildren = function () {\r\n            //     return false;\r\n            // }\r\n        }\r\n\r\n        switch (t._align) {\r\n            case cc.Layout.Type.HORIZONTAL: {\r\n                switch (t._horizontalDir) {\r\n                    case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:\r\n                        t._alignCalcType = 1;\r\n                        break;\r\n                    case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:\r\n                        t._alignCalcType = 2;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n            case cc.Layout.Type.VERTICAL: {\r\n                switch (t._verticalDir) {\r\n                    case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:\r\n                        t._alignCalcType = 3;\r\n                        break;\r\n                    case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:\r\n                        t._alignCalcType = 4;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n            case cc.Layout.Type.GRID: {\r\n                switch (t._startAxis) {\r\n                    case cc.Layout.AxisDirection.HORIZONTAL:\r\n                        switch (t._verticalDir) {\r\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:\r\n                                t._alignCalcType = 3;\r\n                                break;\r\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:\r\n                                t._alignCalcType = 4;\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case cc.Layout.AxisDirection.VERTICAL:\r\n                        switch (t._horizontalDir) {\r\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:\r\n                                t._alignCalcType = 1;\r\n                                break;\r\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:\r\n                                t._alignCalcType = 2;\r\n                                break;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // 清空 content\r\n        // t.content.children.forEach((child: cc.Node) => {\r\n        //     child.removeFromParent();\r\n        //     if (child != t.tmpNode && child.isValid)\r\n        //         child.destroy();\r\n        // });\r\n        t.content.removeAllChildren();\r\n        t._inited = true;\r\n    }\r\n    /**\r\n     * 为了实现循环列表，必须覆写cc.ScrollView的某些函数\r\n     * @param {Number} dt\r\n     */\r\n    _processAutoScrolling(dt: number) {\r\n        let brakingFactor: number = 1;\r\n        this._scrollView['_autoScrollAccumulatedTime'] += dt * (1 / brakingFactor);\r\n\r\n        let percentage: number = Math.min(1, this._scrollView['_autoScrollAccumulatedTime'] / this._scrollView['_autoScrollTotalTime']);\r\n        if (this._scrollView['_autoScrollAttenuate']) {\r\n            let time: number = percentage - 1;\r\n            percentage = time * time * time * time * time + 1;\r\n        }\r\n\r\n        let newPosition: any = this._scrollView['_autoScrollStartPosition'].add(this._scrollView['_autoScrollTargetDelta'].mul(percentage));\r\n        let EPSILON: number = this._scrollView['getScrollEndedEventTiming']();\r\n        let reachedEnd: boolean = Math.abs(percentage - 1) <= EPSILON;\r\n\r\n        let fireEvent: boolean = Math.abs(percentage - 1) <= this._scrollView['getScrollEndedEventTiming']();\r\n        if (fireEvent && !this._scrollView['_isScrollEndedWithThresholdEventFired']) {\r\n            this._scrollView['_dispatchEvent']('scroll-ended-with-threshold');\r\n            this._scrollView['_isScrollEndedWithThresholdEventFired'] = true;\r\n        }\r\n\r\n        if (reachedEnd) {\r\n            this._scrollView['_autoScrolling'] = false;\r\n        }\r\n\r\n        let deltaMove: any = newPosition.sub(this._scrollView.getContentPosition());\r\n        this._scrollView['_moveContent'](this._scrollView['_clampDelta'](deltaMove), reachedEnd);\r\n        this._scrollView['_dispatchEvent']('scrolling');\r\n\r\n        // scollTo API controll move\r\n        if (!this._scrollView['_autoScrolling']) {\r\n            this._scrollView['_isBouncing'] = false;\r\n            this._scrollView['_scrolling'] = false;\r\n            this._scrollView['_dispatchEvent']('scroll-ended');\r\n        }\r\n    }\r\n    //设置模板Item\r\n    setTemplateItem(item: any) {\r\n        if (!item)\r\n            return;\r\n        let t: any = this;\r\n        t._itemTmp = item;\r\n\r\n        if (t._resizeMode == cc.Layout.ResizeMode.CHILDREN)\r\n            t._itemSize = t._layout.cellSize;\r\n        else\r\n            t._itemSize = cc.size(item.width, item.height);\r\n\r\n        //获取ListItem，如果没有就取消选择模式\r\n        let com = item.getComponent(ListItem);\r\n        let remove = false;\r\n        if (!com)\r\n            remove = true;\r\n        // if (com) {\r\n        //     if (!com._btnCom && !item.getComponent(cc.Button)) {\r\n        //         remove = true;\r\n        //     }\r\n        // }\r\n        if (remove) {\r\n            t.selectedMode = SelectedType.NONE;\r\n        }\r\n        com = item.getComponent(cc.Widget);\r\n        if (com && com.enabled) {\r\n            t._needUpdateWidget = true;\r\n        }\r\n        if (t.selectedMode == SelectedType.MULT)\r\n            t.multSelected = [];\r\n\r\n        switch (t._align) {\r\n            case cc.Layout.Type.HORIZONTAL:\r\n                t._colLineNum = 1;\r\n                t._sizeType = false;\r\n                break;\r\n            case cc.Layout.Type.VERTICAL:\r\n                t._colLineNum = 1;\r\n                t._sizeType = true;\r\n                break;\r\n            case cc.Layout.Type.GRID:\r\n                switch (t._startAxis) {\r\n                    case cc.Layout.AxisDirection.HORIZONTAL:\r\n                        //计算列数\r\n                        let trimW: number = t.content.width - t._leftGap - t._rightGap;\r\n                        t._colLineNum = Math.floor((trimW + t._columnGap) / (t._itemSize.width + t._columnGap));\r\n                        t._sizeType = true;\r\n                        break;\r\n                    case cc.Layout.AxisDirection.VERTICAL:\r\n                        //计算行数\r\n                        let trimH: number = t.content.height - t._topGap - t._bottomGap;\r\n                        t._colLineNum = Math.floor((trimH + t._lineGap) / (t._itemSize.height + t._lineGap));\r\n                        t._sizeType = false;\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * 检查是否初始化\r\n     * @param {Boolean} printLog 是否打印错误信息\r\n     * @returns\r\n     */\r\n    checkInited(printLog: boolean = true) {\r\n        if (!this._inited) {\r\n            if (printLog)\r\n                cc.error('List initialization not completed!');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    //禁用 Layout 组件，自行计算 Content Size\r\n    _resizeContent() {\r\n        let t: any = this;\r\n        let result: number;\r\n\r\n        switch (t._align) {\r\n            case cc.Layout.Type.HORIZONTAL: {\r\n                if (t._customSize) {\r\n                    let fixed: any = t._getFixedSize(null);\r\n                    result = t._leftGap + fixed.val + (t._itemSize.width * (t._numItems - fixed.count)) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\r\n                } else {\r\n                    result = t._leftGap + (t._itemSize.width * t._numItems) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\r\n                }\r\n                break;\r\n            }\r\n            case cc.Layout.Type.VERTICAL: {\r\n                if (t._customSize) {\r\n                    let fixed: any = t._getFixedSize(null);\r\n                    result = t._topGap + fixed.val + (t._itemSize.height * (t._numItems - fixed.count)) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\r\n                } else {\r\n                    result = t._topGap + (t._itemSize.height * t._numItems) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\r\n                }\r\n                break;\r\n            }\r\n            case cc.Layout.Type.GRID: {\r\n                //网格模式不支持居中\r\n                if (t.lackCenter)\r\n                    t.lackCenter = false;\r\n                switch (t._startAxis) {\r\n                    case cc.Layout.AxisDirection.HORIZONTAL:\r\n                        let lineNum: number = Math.ceil(t._numItems / t._colLineNum);\r\n                        result = t._topGap + (t._itemSize.height * lineNum) + (t._lineGap * (lineNum - 1)) + t._bottomGap;\r\n                        break;\r\n                    case cc.Layout.AxisDirection.VERTICAL:\r\n                        let colNum: number = Math.ceil(t._numItems / t._colLineNum);\r\n                        result = t._leftGap + (t._itemSize.width * colNum) + (t._columnGap * (colNum - 1)) + t._rightGap;\r\n                        break;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        let layout: cc.Layout = t.content.getComponent(cc.Layout);\r\n        if (layout)\r\n            layout.enabled = false;\r\n\r\n        t._allItemSize = result;\r\n        t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? (t._topGap + t._bottomGap) : (t._leftGap + t._rightGap));\r\n\r\n        if (t.cyclic) {\r\n            let totalSize: number = (t._sizeType ? t.node.height : t.node.width);\r\n\r\n            t._cyclicPos1 = 0;\r\n            totalSize -= t._cyclicPos1;\r\n            t._cyclicNum = Math.ceil(totalSize / t._allItemSizeNoEdge) + 1;\r\n            let spacing: number = t._sizeType ? t._lineGap : t._columnGap;\r\n            t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + spacing;\r\n            t._cyclicAllItemSize = t._allItemSize + (t._allItemSizeNoEdge * (t._cyclicNum - 1)) + (spacing * (t._cyclicNum - 1));\r\n            t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;\r\n            t._cycilcAllItemSizeNoEdge += spacing * (t._cyclicNum - 1);\r\n            // cc.log('_cyclicNum ->', t._cyclicNum, t._allItemSizeNoEdge, t._allItemSize, t._cyclicPos1, t._cyclicPos2);\r\n        }\r\n\r\n        t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t.node.height : t.node.width);\r\n        let slideOffset: number = ((!t._lack || !t.lackCenter) && t.lackSlide) ? 0 : .1;\r\n\r\n        let targetWH: number = t._lack ? ((t._sizeType ? t.node.height : t.node.width) - slideOffset) : (t.cyclic ? t._cyclicAllItemSize : t._allItemSize);\r\n        if (targetWH < 0)\r\n            targetWH = 0;\r\n\r\n        if (t._sizeType) {\r\n            t.content.height = targetWH;\r\n        } else {\r\n            t.content.width = targetWH;\r\n        }\r\n\r\n        // cc.log('_resizeContent()  numItems =', t._numItems, '，content =', t.content);\r\n    }\r\n\r\n    //滚动进行时...\r\n    _onScrolling(ev: cc.Event = null) {\r\n        if (this.frameCount == null)\r\n            this.frameCount = this._updateRate;\r\n        if (!this._forceUpdate && (ev && ev.type != 'scroll-ended') && this.frameCount > 0) {\r\n            this.frameCount--;\r\n            return;\r\n        } else\r\n            this.frameCount = this._updateRate;\r\n\r\n        if (this._aniDelRuning)\r\n            return;\r\n\r\n        //循环列表处理\r\n        if (this.cyclic) {\r\n            let scrollPos: any = this.content.getPosition();\r\n            scrollPos = this._sizeType ? scrollPos.y : scrollPos.x;\r\n\r\n            let addVal = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap);\r\n            let add: any = this._sizeType ? cc.v2(0, addVal) : cc.v2(addVal, 0);\r\n\r\n            switch (this._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                    if (scrollPos > -this._cyclicPos1) {\r\n                        this.content.x = -this._cyclicPos2;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].sub(add);\r\n                        }\r\n                        // if (this._beganPos) {\r\n                        //     this._beganPos += add;\r\n                        // }\r\n                    } else if (scrollPos < -this._cyclicPos2) {\r\n                        this.content.x = -this._cyclicPos1;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                        // if (this._beganPos) {\r\n                        //     this._beganPos -= add;\r\n                        // }\r\n                    }\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                    if (scrollPos < this._cyclicPos1) {\r\n                        this.content.x = this._cyclicPos2;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    } else if (scrollPos > this._cyclicPos2) {\r\n                        this.content.x = this._cyclicPos1;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].sub(add);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (scrollPos < this._cyclicPos1) {\r\n                        this.content.y = this._cyclicPos2;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    } else if (scrollPos > this._cyclicPos2) {\r\n                        this.content.y = this._cyclicPos1;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].sub(add);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (scrollPos > -this._cyclicPos1) {\r\n                        this.content.y = -this._cyclicPos2;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].sub(add);\r\n                        }\r\n                    } else if (scrollPos < -this._cyclicPos2) {\r\n                        this.content.y = -this._cyclicPos1;\r\n                        if (this._scrollView.isAutoScrolling()) {\r\n                            this._scrollView['_autoScrollStartPosition'] = this._scrollView['_autoScrollStartPosition'].add(add);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this._calcViewPos();\r\n\r\n        let vTop: number, vRight: number, vBottom: number, vLeft: number;\r\n        if (this._sizeType) {\r\n            vTop = this.viewTop;\r\n            vBottom = this.viewBottom;\r\n        } else {\r\n            vRight = this.viewRight;\r\n            vLeft = this.viewLeft;\r\n        }\r\n\r\n        if (this._virtual) {\r\n            this.displayData = [];\r\n            let itemPos: any;\r\n\r\n            let curId: number = 0;\r\n            let endId: number = this._numItems - 1;\r\n\r\n            if (this._customSize) {\r\n                let breakFor: boolean = false;\r\n                //如果该item的位置在可视区域内，就推入displayData\r\n                for (; curId <= endId && !breakFor; curId++) {\r\n                    itemPos = this._calcItemPos(curId);\r\n                    switch (this._align) {\r\n                        case cc.Layout.Type.HORIZONTAL:\r\n                            if (itemPos.right >= vLeft && itemPos.left <= vRight) {\r\n                                this.displayData.push(itemPos);\r\n                            } else if (curId != 0 && this.displayData.length > 0) {\r\n                                breakFor = true;\r\n                            }\r\n                            break;\r\n                        case cc.Layout.Type.VERTICAL:\r\n                            if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\r\n                                this.displayData.push(itemPos);\r\n                            } else if (curId != 0 && this.displayData.length > 0) {\r\n                                breakFor = true;\r\n                            }\r\n                            break;\r\n                        case cc.Layout.Type.GRID:\r\n                            switch (this._startAxis) {\r\n                                case cc.Layout.AxisDirection.HORIZONTAL:\r\n                                    if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\r\n                                        this.displayData.push(itemPos);\r\n                                    } else if (curId != 0 && this.displayData.length > 0) {\r\n                                        breakFor = true;\r\n                                    }\r\n                                    break;\r\n                                case cc.Layout.AxisDirection.VERTICAL:\r\n                                    if (itemPos.right >= vLeft && itemPos.left <= vRight) {\r\n                                        this.displayData.push(itemPos);\r\n                                    } else if (curId != 0 && this.displayData.length > 0) {\r\n                                        breakFor = true;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                let ww: number = this._itemSize.width + this._columnGap;\r\n                let hh: number = this._itemSize.height + this._lineGap;\r\n                switch (this._alignCalcType) {\r\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                        curId = (vLeft - this._leftGap) / ww;\r\n                        endId = (vRight - this._leftGap) / ww;\r\n                        break;\r\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                        curId = (-vRight - this._rightGap) / ww;\r\n                        endId = (-vLeft - this._rightGap) / ww;\r\n                        break;\r\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                        curId = (-vTop - this._topGap) / hh;\r\n                        endId = (-vBottom - this._topGap) / hh;\r\n                        break;\r\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                        curId = (vBottom - this._bottomGap) / hh;\r\n                        endId = (vTop - this._bottomGap) / hh;\r\n                        break;\r\n                }\r\n                curId = Math.floor(curId) * this._colLineNum;\r\n                endId = Math.ceil(endId) * this._colLineNum;\r\n                endId--;\r\n                if (curId < 0)\r\n                    curId = 0;\r\n                if (endId >= this._numItems)\r\n                    endId = this._numItems - 1;\r\n                for (; curId <= endId; curId++) {\r\n                    this.displayData.push(this._calcItemPos(curId));\r\n                }\r\n            }\r\n            this._delRedundantItem();\r\n            if (this.displayData.length <= 0 || !this._numItems) { //if none, delete all.\r\n                this._lastDisplayData = [];\r\n                return;\r\n            }\r\n            this.firstListId = this.displayData[0].id;\r\n            this.displayItemNum = this.displayData.length;\r\n\r\n            let len: number = this._lastDisplayData.length;\r\n\r\n            let haveDataChange: boolean = this.displayItemNum != len;\r\n            if (haveDataChange) {\r\n                // 如果是逐帧渲染，需要排序\r\n                if (this.frameByFrameRenderNum > 0) {\r\n                    this._lastDisplayData.sort((a, b) => { return a - b });\r\n                }\r\n                // 因List的显示数据是有序的，所以只需要判断数组长度是否相等，以及头、尾两个元素是否相等即可。\r\n                haveDataChange = this.firstListId != this._lastDisplayData[0] || this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[len - 1];\r\n            }\r\n\r\n            if (this._forceUpdate || haveDataChange) {    //如果是强制更新\r\n                if (this.frameByFrameRenderNum > 0) {\r\n                    // if (this._updateDone) {\r\n                    // this._lastDisplayData = [];\r\n                    //逐帧渲染\r\n                    if (this._numItems > 0) {\r\n                        if (!this._updateDone) {\r\n                            this._doneAfterUpdate = true;\r\n                        } else {\r\n                            this._updateCounter = 0;\r\n                        }\r\n                        this._updateDone = false;\r\n                    } else {\r\n                        this._updateCounter = 0;\r\n                        this._updateDone = true;\r\n                    }\r\n                    // }\r\n                } else {\r\n                    //直接渲染\r\n                    this._lastDisplayData = [];\r\n                    // cc.log('List Display Data II::', this.displayData);\r\n                    for (let c = 0; c < this.displayItemNum; c++) {\r\n                        this._createOrUpdateItem(this.displayData[c]);\r\n                    }\r\n                    this._forceUpdate = false;\r\n                }\r\n            }\r\n            this._calcNearestItem();\r\n        }\r\n    }\r\n    //计算可视范围\r\n    _calcViewPos() {\r\n        let scrollPos: any = this.content.getPosition();\r\n        switch (this._alignCalcType) {\r\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                this.elasticLeft = scrollPos.x > 0 ? scrollPos.x : 0;\r\n                this.viewLeft = (scrollPos.x < 0 ? -scrollPos.x : 0) - this.elasticLeft;\r\n                this.viewRight = this.viewLeft + this.node.width;\r\n                this.elasticRight = this.viewRight > this.content.width ? Math.abs(this.viewRight - this.content.width) : 0;\r\n                this.viewRight += this.elasticRight;\r\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\r\n                break;\r\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                this.elasticRight = scrollPos.x < 0 ? -scrollPos.x : 0;\r\n                this.viewRight = (scrollPos.x > 0 ? -scrollPos.x : 0) + this.elasticRight;\r\n                this.viewLeft = this.viewRight - this.node.width;\r\n                this.elasticLeft = this.viewLeft < -this.content.width ? Math.abs(this.viewLeft + this.content.width) : 0;\r\n                this.viewLeft -= this.elasticLeft;\r\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\r\n                break;\r\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                this.elasticTop = scrollPos.y < 0 ? Math.abs(scrollPos.y) : 0;\r\n                this.viewTop = (scrollPos.y > 0 ? -scrollPos.y : 0) + this.elasticTop;\r\n                this.viewBottom = this.viewTop - this.node.height;\r\n                this.elasticBottom = this.viewBottom < -this.content.height ? Math.abs(this.viewBottom + this.content.height) : 0;\r\n                this.viewBottom += this.elasticBottom;\r\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\r\n                break;\r\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                this.elasticBottom = scrollPos.y > 0 ? Math.abs(scrollPos.y) : 0;\r\n                this.viewBottom = (scrollPos.y < 0 ? -scrollPos.y : 0) - this.elasticBottom;\r\n                this.viewTop = this.viewBottom + this.node.height;\r\n                this.elasticTop = this.viewTop > this.content.height ? Math.abs(this.viewTop - this.content.height) : 0;\r\n                this.viewTop -= this.elasticTop;\r\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\r\n                break;\r\n        }\r\n    }\r\n    //计算位置 根据id\r\n    _calcItemPos(id: number) {\r\n        let width: number, height: number, top: number, bottom: number, left: number, right: number, itemX: number, itemY: number;\r\n        switch (this._align) {\r\n            case cc.Layout.Type.HORIZONTAL:\r\n                switch (this._horizontalDir) {\r\n                    case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * (id - fixed.count)) + (fixed.val + (this._columnGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            width = (cs > 0 ? cs : this._itemSize.width);\r\n                        } else {\r\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * id);\r\n                            width = this._itemSize.width;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            left -= this._leftGap;\r\n                            let offset: number = (this.content.width / 2) - (this._allItemSizeNoEdge / 2);\r\n                            left += offset;\r\n                        }\r\n                        right = left + width;\r\n                        return {\r\n                            id: id,\r\n                            left: left,\r\n                            right: right,\r\n                            x: left + (this._itemTmp.anchorX * width),\r\n                            y: this._itemTmp.y,\r\n                        };\r\n                    }\r\n                    case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * (id - fixed.count)) - (fixed.val + (this._columnGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            width = (cs > 0 ? cs : this._itemSize.width);\r\n                        } else {\r\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * id);\r\n                            width = this._itemSize.width;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            right += this._rightGap;\r\n                            let offset: number = (this.content.width / 2) - (this._allItemSizeNoEdge / 2);\r\n                            right -= offset;\r\n                        }\r\n                        left = right - width;\r\n                        return {\r\n                            id: id,\r\n                            right: right,\r\n                            left: left,\r\n                            x: left + (this._itemTmp.anchorX * width),\r\n                            y: this._itemTmp.y,\r\n                        };\r\n                    }\r\n                }\r\n                break;\r\n            case cc.Layout.Type.VERTICAL: {\r\n                switch (this._verticalDir) {\r\n                    case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * (id - fixed.count)) - (fixed.val + (this._lineGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            height = (cs > 0 ? cs : this._itemSize.height);\r\n                        } else {\r\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * id);\r\n                            height = this._itemSize.height;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            top += this._topGap;\r\n                            let offset: number = (this.content.height / 2) - (this._allItemSizeNoEdge / 2);\r\n                            top -= offset;\r\n                        }\r\n                        bottom = top - height;\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: this._itemTmp.x,\r\n                            y: bottom + (this._itemTmp.anchorY * height),\r\n                        };\r\n                    }\r\n                    case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                        if (this._customSize) {\r\n                            let fixed: any = this._getFixedSize(id);\r\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * (id - fixed.count)) + (fixed.val + (this._lineGap * fixed.count));\r\n                            let cs: number = this._customSize[id];\r\n                            height = (cs > 0 ? cs : this._itemSize.height);\r\n                        } else {\r\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * id);\r\n                            height = this._itemSize.height;\r\n                        }\r\n                        if (this.lackCenter) {\r\n                            bottom -= this._bottomGap;\r\n                            let offset: number = (this.content.height / 2) - (this._allItemSizeNoEdge / 2);\r\n                            bottom += offset;\r\n                        }\r\n                        top = bottom + height;\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: this._itemTmp.x,\r\n                            y: bottom + (this._itemTmp.anchorY * height),\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            case cc.Layout.Type.GRID: {\r\n                let colLine: number = Math.floor(id / this._colLineNum);\r\n                switch (this._startAxis) {\r\n                    case cc.Layout.AxisDirection.HORIZONTAL: {\r\n                        switch (this._verticalDir) {\r\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                                top = -this._topGap - ((this._itemSize.height + this._lineGap) * colLine);\r\n                                bottom = top - this._itemSize.height;\r\n                                itemY = bottom + (this._itemTmp.anchorY * this._itemSize.height);\r\n                                break;\r\n                            }\r\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                                bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * colLine);\r\n                                top = bottom + this._itemSize.height;\r\n                                itemY = bottom + (this._itemTmp.anchorY * this._itemSize.height);\r\n                                break;\r\n                            }\r\n                        }\r\n                        itemX = this._leftGap + ((id % this._colLineNum) * (this._itemSize.width + this._columnGap));\r\n                        switch (this._horizontalDir) {\r\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                                itemX += (this._itemTmp.anchorX * this._itemSize.width);\r\n                                itemX -= (this.content.anchorX * this.content.width);\r\n                                break;\r\n                            }\r\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                                itemX += ((1 - this._itemTmp.anchorX) * this._itemSize.width);\r\n                                itemX -= ((1 - this.content.anchorX) * this.content.width);\r\n                                itemX *= -1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            top: top,\r\n                            bottom: bottom,\r\n                            x: itemX,\r\n                            y: itemY,\r\n                        };\r\n                    }\r\n                    case cc.Layout.AxisDirection.VERTICAL: {\r\n                        switch (this._horizontalDir) {\r\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\r\n                                left = this._leftGap + ((this._itemSize.width + this._columnGap) * colLine);\r\n                                right = left + this._itemSize.width;\r\n                                itemX = left + (this._itemTmp.anchorX * this._itemSize.width);\r\n                                itemX -= (this.content.anchorX * this.content.width);\r\n                                break;\r\n                            }\r\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\r\n                                right = -this._rightGap - ((this._itemSize.width + this._columnGap) * colLine);\r\n                                left = right - this._itemSize.width;\r\n                                itemX = left + (this._itemTmp.anchorX * this._itemSize.width);\r\n                                itemX += ((1 - this.content.anchorX) * this.content.width);\r\n                                break;\r\n                            }\r\n                        }\r\n                        itemY = -this._topGap - ((id % this._colLineNum) * (this._itemSize.height + this._lineGap));\r\n                        switch (this._verticalDir) {\r\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\r\n                                itemY -= ((1 - this._itemTmp.anchorY) * this._itemSize.height);\r\n                                itemY += ((1 - this.content.anchorY) * this.content.height);\r\n                                break;\r\n                            }\r\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\r\n                                itemY -= ((this._itemTmp.anchorY) * this._itemSize.height);\r\n                                itemY += (this.content.anchorY * this.content.height);\r\n                                itemY *= -1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return {\r\n                            id: id,\r\n                            left: left,\r\n                            right: right,\r\n                            x: itemX,\r\n                            y: itemY,\r\n                        };\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    //计算已存在的Item的位置\r\n    _calcExistItemPos(id: number) {\r\n        let item: any = this.getItemByListId(id);\r\n        if (!item)\r\n            return null;\r\n        let data: any = {\r\n            id: id,\r\n            x: item.x,\r\n            y: item.y,\r\n        }\r\n        if (this._sizeType) {\r\n            data.top = item.y + (item.height * (1 - item.anchorY));\r\n            data.bottom = item.y - (item.height * item.anchorY);\r\n        } else {\r\n            data.left = item.x - (item.width * item.anchorX);\r\n            data.right = item.x + (item.width * (1 - item.anchorX));\r\n        }\r\n        return data;\r\n    }\r\n    //获取Item位置\r\n    getItemPos(id: number) {\r\n        if (this._virtual)\r\n            return this._calcItemPos(id);\r\n        else {\r\n            if (this.frameByFrameRenderNum)\r\n                return this._calcItemPos(id);\r\n            else\r\n                return this._calcExistItemPos(id);\r\n        }\r\n    }\r\n    //获取固定尺寸\r\n    _getFixedSize(listId: number) {\r\n        if (!this._customSize)\r\n            return null;\r\n        if (listId == null)\r\n            listId = this._numItems;\r\n        let fixed: number = 0;\r\n        let count: number = 0;\r\n        for (let id in this._customSize) {\r\n            if (parseInt(id) < listId) {\r\n                fixed += this._customSize[id];\r\n                count++;\r\n            }\r\n        }\r\n        return {\r\n            val: fixed,\r\n            count: count,\r\n        }\r\n    }\r\n    //滚动结束时..\r\n    _onScrollBegan() {\r\n        this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;\r\n    }\r\n    //滚动结束时..\r\n    _onScrollEnded() {\r\n        let t: any = this;\r\n        t.curScrollIsTouch = false;\r\n        if (t.scrollToListId != null) {\r\n            let item: any = t.getItemByListId(t.scrollToListId);\r\n            t.scrollToListId = null;\r\n            if (item) {\r\n                cc.tween(item)\r\n                    .to(.1, { scale: 1.06 })\r\n                    .to(.1, { scale: 1 })\r\n                    .start();\r\n            }\r\n        }\r\n        t._onScrolling();\r\n\r\n        if (t._slideMode == SlideType.ADHERING &&\r\n            !t.adhering\r\n        ) {\r\n            //cc.log(t.adhering, t._scrollView.isAutoScrolling(), t._scrollView.isScrolling());\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null && t.curScrollIsTouch) {\r\n                this._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n    }\r\n    // 触摸时\r\n    _onTouchStart(ev, captureListeners) {\r\n        if (this._scrollView?.['hasNestedViewGroup']())//ev, captureListeners\r\n            return;\r\n        this.curScrollIsTouch = true;\r\n        let isMe = ev.eventPhase === cc.Event.AT_TARGET && ev.target === this.node;\r\n        if (!isMe) {\r\n            let itemNode: any = ev.target;\r\n            while (itemNode._listId == null && itemNode.parent)\r\n                itemNode = itemNode.parent;\r\n            this._scrollItem = itemNode._listId != null ? itemNode : ev.target;\r\n        }\r\n    }\r\n    //触摸抬起时..\r\n    _onTouchUp() {\r\n        let t: any = this;\r\n        t._scrollPos = null;\r\n        if (t._slideMode == SlideType.ADHERING) {\r\n            if (this.adhering)\r\n                this._adheringBarrier = true;\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                this._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n        this._scrollItem = null;\r\n    }\r\n\r\n    _onTouchCancelled(ev, captureListeners) {\r\n        let t = this;\r\n        if (t._scrollView?.['hasNestedViewGroup']() || ev.simulate)//ev, captureListeners\r\n            return;\r\n\r\n        t._scrollPos = null;\r\n        if (t._slideMode == SlideType.ADHERING) {\r\n            if (t.adhering)\r\n                t._adheringBarrier = true;\r\n            t.adhere();\r\n        } else if (t._slideMode == SlideType.PAGE) {\r\n            if (t._beganPos != null) {\r\n                t._pageAdhere();\r\n            } else {\r\n                t.adhere();\r\n            }\r\n        }\r\n        this._scrollItem = null;\r\n    }\r\n    //当尺寸改变\r\n    _onSizeChanged() {\r\n        if (this.checkInited(false))\r\n            this._onScrolling();\r\n    }\r\n    //当Item自适应\r\n    _onItemAdaptive(item) {\r\n        // if (this.checkInited(false)) {\r\n        if (\r\n            (!this._sizeType && item.width != this._itemSize.width)\r\n            || (this._sizeType && item.height != this._itemSize.height)\r\n        ) {\r\n            if (!this._customSize)\r\n                this._customSize = {};\r\n            let val = this._sizeType ? item.height : item.width;\r\n            if (this._customSize[item._listId] != val) {\r\n                this._customSize[item._listId] = val;\r\n                this._resizeContent();\r\n                // this.content.children.forEach((child: cc.Node) => {\r\n                //     this._updateItemPos(child);\r\n                // });\r\n                this.updateAll();\r\n                // 如果当前正在运行 scrollTo，肯定会不准确，在这里做修正\r\n                if (this._scrollToListId != null) {\r\n                    this._scrollPos = null;\r\n                    this.unschedule(this._scrollToSo);\r\n                    this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - ((new Date()).getTime() / 1000)));\r\n                }\r\n            }\r\n        }\r\n        // }\r\n    }\r\n    //PAGE粘附\r\n    _pageAdhere() {\r\n        let t = this;\r\n        if (!t.cyclic && (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0))\r\n            return;\r\n        let curPos = t._sizeType ? t.viewTop : t.viewLeft;\r\n        let dis = (t._sizeType ? t.node.height : t.node.width) * t.pageDistance;\r\n        let canSkip = Math.abs(t._beganPos - curPos) > dis;\r\n        if (canSkip) {\r\n            let timeInSecond = .5;\r\n            switch (t._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (t._beganPos > curPos) {\r\n                        t.prePage(timeInSecond);\r\n                        // cc.log('_pageAdhere   PPPPPPPPPPPPPPP');\r\n                    } else {\r\n                        t.nextPage(timeInSecond);\r\n                        // cc.log('_pageAdhere   NNNNNNNNNNNNNNN');\r\n                    }\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (t._beganPos < curPos) {\r\n                        t.prePage(timeInSecond);\r\n                    } else {\r\n                        t.nextPage(timeInSecond);\r\n                    }\r\n                    break;\r\n            }\r\n        } else if (t.elasticTop <= 0 && t.elasticRight <= 0 && t.elasticBottom <= 0 && t.elasticLeft <= 0) {\r\n            t.adhere();\r\n        }\r\n        t._beganPos = null;\r\n    }\r\n    //粘附\r\n    adhere() {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0)\r\n            return;\r\n        t.adhering = true;\r\n        t._calcNearestItem();\r\n        let offset: number = (t._sizeType ? t._topGap : t._leftGap) / (t._sizeType ? t.node.height : t.node.width);\r\n        let timeInSecond: number = .7;\r\n        t.scrollTo(t.nearestListId, timeInSecond, offset);\r\n    }\r\n    //Update..\r\n    update() {\r\n        if (this.frameByFrameRenderNum <= 0 || this._updateDone)\r\n            return;\r\n        // cc.log(this.displayData.length, this._updateCounter, this.displayData[this._updateCounter]);\r\n        if (this._virtual) {\r\n            let len: number = (this._updateCounter + this.frameByFrameRenderNum) > this.displayItemNum ? this.displayItemNum : (this._updateCounter + this.frameByFrameRenderNum);\r\n            for (let n: number = this._updateCounter; n < len; n++) {\r\n                let data: any = this.displayData[n];\r\n                if (data) {\r\n                    this._createOrUpdateItem(data);\r\n                }\r\n            }\r\n\r\n            if (this._updateCounter >= this.displayItemNum - 1) { //最后一个\r\n                if (this._doneAfterUpdate) {\r\n                    this._updateCounter = 0;\r\n                    this._updateDone = false;\r\n                    // if (!this._scrollView.isScrolling())\r\n                    this._doneAfterUpdate = false;\r\n                } else {\r\n                    this._updateDone = true;\r\n                    this._delRedundantItem();\r\n                    this._forceUpdate = false;\r\n                    this._calcNearestItem();\r\n                    if (this.slideMode == SlideType.PAGE)\r\n                        this.curPageNum = this.nearestListId;\r\n                }\r\n            } else {\r\n                this._updateCounter += this.frameByFrameRenderNum;\r\n            }\r\n        } else {\r\n            if (this._updateCounter < this._numItems) {\r\n                let len: number = (this._updateCounter + this.frameByFrameRenderNum) > this._numItems ? this._numItems : (this._updateCounter + this.frameByFrameRenderNum);\r\n                for (let n: number = this._updateCounter; n < len; n++) {\r\n                    this._createOrUpdateItem2(n);\r\n                }\r\n                this._updateCounter += this.frameByFrameRenderNum;\r\n            } else {\r\n                this._updateDone = true;\r\n                this._calcNearestItem();\r\n                if (this.slideMode == SlideType.PAGE)\r\n                    this.curPageNum = this.nearestListId;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 创建或更新Item（虚拟列表用）\r\n     * @param {Object} data 数据\r\n     */\r\n    _createOrUpdateItem(data: any) {\r\n        let item: any = this.getItemByListId(data.id);\r\n        if (!item) { //如果不存在\r\n            let canGet: boolean = this._pool.size() > 0;\r\n            if (canGet) {\r\n                item = this._pool.get();\r\n                // cc.log('从池中取出::   旧id =', item['_listId'], '，新id =', data.id, item);\r\n            } else {\r\n                item = cc.instantiate(this._itemTmp);\r\n                // cc.log('新建::', data.id, item);\r\n            }\r\n            if (!canGet || !cc.isValid(item)) {\r\n                item = cc.instantiate(this._itemTmp);\r\n                canGet = false;\r\n            }\r\n            if (item._listId != data.id) {\r\n                item._listId = data.id;\r\n                item.setContentSize(this._itemSize);\r\n            }\r\n            item.setPosition(cc.v2(data.x, data.y));\r\n            this._resetItemSize(item);\r\n            this.content.addChild(item);\r\n            if (canGet && this._needUpdateWidget) {\r\n                let widget: cc.Widget = item.getComponent(cc.Widget);\r\n                if (widget)\r\n                    widget.updateAlignment();\r\n            }\r\n            item.setSiblingIndex(this.content.childrenCount - 1);\r\n\r\n            let listItem: ListItem = item.getComponent(ListItem);\r\n            item['listItem'] = listItem;\r\n            if (listItem) {\r\n                listItem.listId = data.id;\r\n                listItem.list = this;\r\n                listItem._registerEvent();\r\n            }\r\n            if (this.renderEvent) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\r\n            }\r\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\r\n            item.setPosition(cc.v2(data.x, data.y));\r\n            this._resetItemSize(item);\r\n            // cc.log('ADD::', data.id, item);\r\n            if (this.renderEvent) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\r\n            }\r\n        }\r\n        this._resetItemSize(item);\r\n\r\n        this._updateListItem(item['listItem']);\r\n        if (this._lastDisplayData.indexOf(data.id) < 0) {\r\n            this._lastDisplayData.push(data.id);\r\n        }\r\n    }\r\n    //创建或更新Item（非虚拟列表用）\r\n    _createOrUpdateItem2(listId: number) {\r\n        let item: any = this.content.children[listId];\r\n        let listItem: ListItem;\r\n        if (!item) { //如果不存在\r\n            item = cc.instantiate(this._itemTmp);\r\n            item._listId = listId;\r\n            this.content.addChild(item);\r\n            listItem = item.getComponent(ListItem);\r\n            item['listItem'] = listItem;\r\n            if (listItem) {\r\n                listItem.listId = listId;\r\n                listItem.list = this;\r\n                listItem._registerEvent();\r\n            }\r\n            if (this.renderEvent) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n            }\r\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\r\n            item._listId = listId;\r\n            if (listItem)\r\n                listItem.listId = listId;\r\n            if (this.renderEvent) {\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n            }\r\n        }\r\n        this._updateListItem(listItem);\r\n        if (this._lastDisplayData.indexOf(listId) < 0) {\r\n            this._lastDisplayData.push(listId);\r\n        }\r\n    }\r\n\r\n    _updateListItem(listItem: ListItem) {\r\n        if (!listItem)\r\n            return;\r\n        if (this.selectedMode > SelectedType.NONE) {\r\n            let item: any = listItem.node;\r\n            switch (this.selectedMode) {\r\n                case SelectedType.SINGLE:\r\n                    listItem.selected = this.selectedId == item._listId;\r\n                    break;\r\n                case SelectedType.MULT:\r\n                    listItem.selected = this.multSelected.indexOf(item._listId) >= 0;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    //仅虚拟列表用\r\n    _resetItemSize(item: any) {\r\n        return;\r\n        let size: number;\r\n        if (this._customSize && this._customSize[item._listId]) {\r\n            size = this._customSize[item._listId];\r\n        } else {\r\n            if (this._colLineNum > 1)\r\n                item.setContentSize(this._itemSize);\r\n            else\r\n                size = this._sizeType ? this._itemSize.height : this._itemSize.width;\r\n        }\r\n        if (size) {\r\n            if (this._sizeType)\r\n                item.height = size;\r\n            else\r\n                item.width = size;\r\n        }\r\n    }\r\n    /**\r\n     * 更新Item位置\r\n     * @param {Number||Node} listIdOrItem\r\n     */\r\n    _updateItemPos(listIdOrItem: any) {\r\n        let item: any = isNaN(listIdOrItem) ? listIdOrItem : this.getItemByListId(listIdOrItem);\r\n        let pos: any = this.getItemPos(item._listId);\r\n        item.setPosition(pos.x, pos.y);\r\n    }\r\n    /**\r\n     * 设置多选\r\n     * @param {Array} args 可以是单个listId，也可是个listId数组\r\n     * @param {Boolean} bool 值，如果为null的话，则直接用args覆盖\r\n     */\r\n    setMultSelected(args: any, bool: boolean) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (!Array.isArray(args)) {\r\n            args = [args];\r\n        }\r\n        if (bool == null) {\r\n            t.multSelected = args;\r\n        } else {\r\n            let listId: number, sub: number;\r\n            if (bool) {\r\n                for (let n: number = args.length - 1; n >= 0; n--) {\r\n                    listId = args[n];\r\n                    sub = t.multSelected.indexOf(listId);\r\n                    if (sub < 0) {\r\n                        t.multSelected.push(listId);\r\n                    }\r\n                }\r\n            } else {\r\n                for (let n: number = args.length - 1; n >= 0; n--) {\r\n                    listId = args[n];\r\n                    sub = t.multSelected.indexOf(listId);\r\n                    if (sub >= 0) {\r\n                        t.multSelected.splice(sub, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        t._forceUpdate = true;\r\n        t._onScrolling();\r\n    }\r\n    /**\r\n     * 获取多选数据\r\n     * @returns\r\n     */\r\n    getMultSelected() {\r\n        return this.multSelected;\r\n    }\r\n    /**\r\n     * 多选是否有选择\r\n     * @param {number} listId 索引\r\n     * @returns\r\n     */\r\n    hasMultSelected(listId: number) {\r\n        return this.multSelected && this.multSelected.indexOf(listId) >= 0;\r\n    }\r\n    /**\r\n     * 更新指定的Item\r\n     * @param {Array} args 单个listId，或者数组\r\n     * @returns\r\n     */\r\n    updateItem(args: any) {\r\n        if (!this.checkInited())\r\n            return;\r\n        if (!Array.isArray(args)) {\r\n            args = [args];\r\n        }\r\n        for (let n: number = 0, len: number = args.length; n < len; n++) {\r\n            let listId: number = args[n];\r\n            let item: any = this.getItemByListId(listId);\r\n            if (item)\r\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\r\n        }\r\n    }\r\n    /**\r\n     * 更新全部\r\n     */\r\n    updateAll() {\r\n        if (!this.checkInited())\r\n            return;\r\n        this.numItems = this.numItems;\r\n    }\r\n    /**\r\n     * 根据ListID获取Item\r\n     * @param {Number} listId\r\n     * @returns\r\n     */\r\n    getItemByListId(listId: number) {\r\n        if (this.content) {\r\n            for (let n: number = this.content.childrenCount - 1; n >= 0; n--) {\r\n                let item: any = this.content.children[n];\r\n                if (item._listId == listId)\r\n                    return item;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 获取在显示区域外的Item\r\n     * @returns\r\n     */\r\n    _getOutsideItem() {\r\n        let item: any;\r\n        let result: any[] = [];\r\n        for (let n: number = this.content.childrenCount - 1; n >= 0; n--) {\r\n            item = this.content.children[n];\r\n            if (!this.displayData.find(d => d.id == item._listId)) {\r\n                result.push(item);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    //删除显示区域以外的Item\r\n    _delRedundantItem() {\r\n        if (this._virtual) {\r\n            let arr: any[] = this._getOutsideItem();\r\n            for (let n: number = arr.length - 1; n >= 0; n--) {\r\n                let item: any = arr[n];\r\n                if (this._scrollItem && item._listId == this._scrollItem._listId)\r\n                    continue;\r\n                item.isCached = true;\r\n                this._pool.put(item);\r\n                for (let m: number = this._lastDisplayData.length - 1; m >= 0; m--) {\r\n                    if (this._lastDisplayData[m] == item._listId) {\r\n                        this._lastDisplayData.splice(m, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // cc.log('存入::', str, '    pool.length =', this._pool.length);\r\n        } else {\r\n            while (this.content.childrenCount > this._numItems) {\r\n                this._delSingleItem(this.content.children[this.content.childrenCount - 1]);\r\n            }\r\n        }\r\n    }\r\n    //删除单个Item\r\n    _delSingleItem(item: any) {\r\n        // cc.log('DEL::', item['_listId'], item);\r\n        item.removeFromParent();\r\n        if (item.destroy)\r\n            item.destroy();\r\n        item = null;\r\n    }\r\n    /** \r\n     * 动效删除Item（此方法只适用于虚拟列表，即_virtual=true）\r\n     * 一定要在回调函数里重新设置新的numItems进行刷新，毕竟本List是靠数据驱动的。\r\n     */\r\n    aniDelItem(listId: number, callFunc: Function, aniType: number) {\r\n        let t: any = this;\r\n\r\n        if (!t.checkInited() || t.cyclic || !t._virtual)\r\n            return cc.error('This function is not allowed to be called!');\r\n\r\n        if (!callFunc)\r\n            return cc.error('CallFunc are not allowed to be NULL, You need to delete the corresponding index in the data array in the CallFunc!');\r\n\r\n        if (t._aniDelRuning)\r\n            return cc.warn('Please wait for the current deletion to finish!');\r\n\r\n        let item: any = t.getItemByListId(listId);\r\n        let listItem: ListItem;\r\n        if (!item) {\r\n            callFunc(listId);\r\n            return;\r\n        } else {\r\n            listItem = item.getComponent(ListItem);\r\n        }\r\n        t._aniDelRuning = true;\r\n        t._aniDelCB = callFunc;\r\n        t._aniDelItem = item;\r\n        t._aniDelBeforePos = item.position;\r\n        t._aniDelBeforeScale = item.scale;\r\n        let curLastId: number = t.displayData[t.displayData.length - 1].id;\r\n        let resetSelectedId: boolean = listItem.selected;\r\n        listItem.showAni(aniType, () => {\r\n            //判断有没有下一个，如果有的话，创建粗来\r\n            let newId: number;\r\n            if (curLastId < t._numItems - 2) {\r\n                newId = curLastId + 1;\r\n            }\r\n            if (newId != null) {\r\n                let newData: any = t._calcItemPos(newId);\r\n                t.displayData.push(newData);\r\n                if (t._virtual)\r\n                    t._createOrUpdateItem(newData);\r\n                else\r\n                    t._createOrUpdateItem2(newId);\r\n            } else\r\n                t._numItems--;\r\n            if (t.selectedMode == SelectedType.SINGLE) {\r\n                if (resetSelectedId) {\r\n                    t._selectedId = -1;\r\n                } else if (t._selectedId - 1 >= 0) {\r\n                    t._selectedId--;\r\n                }\r\n            } else if (t.selectedMode == SelectedType.MULT && t.multSelected.length) {\r\n                let sub: number = t.multSelected.indexOf(listId);\r\n                if (sub >= 0) {\r\n                    t.multSelected.splice(sub, 1);\r\n                }\r\n                //多选的数据，在其后的全部减一\r\n                for (let n: number = t.multSelected.length - 1; n >= 0; n--) {\r\n                    let id: number = t.multSelected[n];\r\n                    if (id >= listId)\r\n                        t.multSelected[n]--;\r\n                }\r\n            }\r\n            if (t._customSize) {\r\n                if (t._customSize[listId])\r\n                    delete t._customSize[listId];\r\n                let newCustomSize: any = {};\r\n                let size: number;\r\n                for (let id in t._customSize) {\r\n                    size = t._customSize[id];\r\n                    let idNumber: number = parseInt(id);\r\n                    newCustomSize[idNumber - (idNumber >= listId ? 1 : 0)] = size;\r\n                }\r\n                t._customSize = newCustomSize;\r\n            }\r\n            //后面的Item向前怼的动效\r\n            let sec: number = .2333;\r\n            let tween: cc.Tween, haveCB: boolean;\r\n            for (let n: number = newId != null ? newId : curLastId; n >= listId + 1; n--) {\r\n                item = t.getItemByListId(n);\r\n                if (item) {\r\n                    let posData: any = t._calcItemPos(n - 1);\r\n                    tween = cc.tween(item)\r\n                        .to(sec, { position: cc.v2(posData.x, posData.y) });\r\n                    if (n <= listId + 1) {\r\n                        haveCB = true;\r\n                        tween.call(() => {\r\n                            t._aniDelRuning = false;\r\n                            callFunc(listId);\r\n                            delete t._aniDelCB;\r\n                        });\r\n                    }\r\n                    tween.start();\r\n                }\r\n            }\r\n            if (!haveCB) {\r\n                t._aniDelRuning = false;\r\n                callFunc(listId);\r\n                t._aniDelCB = null;\r\n            }\r\n        }, true);\r\n    }\r\n    /**\r\n     * 滚动到..\r\n     * @param {Number} listId 索引（如果<0，则滚到首个Item位置，如果>=_numItems，则滚到最末Item位置）\r\n     * @param {Number} timeInSecond 时间\r\n     * @param {Number} offset 索引目标位置偏移，0-1\r\n     * @param {Boolean} overStress 滚动后是否强调该Item（这只是个实验功能）\r\n     */\r\n    scrollTo(listId: number, timeInSecond: number = .5, offset: number = null, overStress: boolean = false) {\r\n        let t = this;\r\n        if (!t.checkInited(false))\r\n            return;\r\n        // t._scrollView.stopAutoScroll();\r\n        if (timeInSecond == null)   //默认0.5\r\n            timeInSecond = .5;\r\n        else if (timeInSecond < 0)\r\n            timeInSecond = 0;\r\n        if (listId < 0)\r\n            listId = 0;\r\n        else if (listId >= t._numItems)\r\n            listId = t._numItems - 1;\r\n        // 以防设置了numItems之后layout的尺寸还未更新\r\n        if (!t._virtual && t._layout && t._layout.enabled)\r\n            t._layout.updateLayout();\r\n\r\n        let pos = t.getItemPos(listId);\r\n        if (!pos) {\r\n            return CC_DEV && cc.error('pos is null', listId);\r\n        }\r\n        let targetX: number, targetY: number;\r\n\r\n        switch (t._alignCalcType) {\r\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                targetX = pos.left;\r\n                if (offset != null)\r\n                    targetX -= t.node.width * offset;\r\n                else\r\n                    targetX -= t._leftGap;\r\n                pos = cc.v2(targetX, 0);\r\n                break;\r\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                targetX = pos.right - t.node.width;\r\n                if (offset != null)\r\n                    targetX += t.node.width * offset;\r\n                else\r\n                    targetX += t._rightGap;\r\n                pos = cc.v2(targetX + t.content.width, 0);\r\n                break;\r\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                targetY = pos.top;\r\n                if (offset != null)\r\n                    targetY += t.node.height * offset;\r\n                else\r\n                    targetY += t._topGap;\r\n                pos = cc.v2(0, -targetY);\r\n                break;\r\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                targetY = pos.bottom + t.node.height;\r\n                if (offset != null)\r\n                    targetY -= t.node.height * offset;\r\n                else\r\n                    targetY -= t._bottomGap;\r\n                pos = cc.v2(0, -targetY + t.content.height);\r\n                break;\r\n        }\r\n        let viewPos: any = t.content.getPosition();\r\n        viewPos = Math.abs(t._sizeType ? viewPos.y : viewPos.x);\r\n\r\n        let comparePos = t._sizeType ? pos.y : pos.x;\r\n        let runScroll = Math.abs((t._scrollPos != null ? t._scrollPos : viewPos) - comparePos) > .5;\r\n        // cc.log(runScroll, t._scrollPos, viewPos, comparePos)\r\n\r\n        // t._scrollView.stopAutoScroll();\r\n        if (runScroll) {\r\n            t._scrollView.scrollToOffset(pos, timeInSecond);\r\n            t._scrollToListId = listId;\r\n            t._scrollToEndTime = ((new Date()).getTime() / 1000) + timeInSecond;\r\n            // cc.log(listId, t.content.width, t.content.getPosition(), pos);\r\n            t._scrollToSo = t.scheduleOnce(() => {\r\n                if (!t._adheringBarrier) {\r\n                    t.adhering = t._adheringBarrier = false;\r\n                }\r\n                t._scrollPos =\r\n                    t._scrollToListId =\r\n                    t._scrollToEndTime =\r\n                    t._scrollToSo =\r\n                    null;\r\n                //cc.log('2222222222', t._adheringBarrier)\r\n                if (overStress) {\r\n                    // t.scrollToListId = listId;\r\n                    let item = t.getItemByListId(listId);\r\n                    if (item) {\r\n                        cc.tween(item)\r\n                            .to(.1, { scale: 1.05 })\r\n                            .to(.1, { scale: 1 })\r\n                            .start();\r\n                    }\r\n                }\r\n            }, timeInSecond + .1);\r\n\r\n            if (timeInSecond <= 0) {\r\n                t._onScrolling();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 计算当前滚动窗最近的Item\r\n     */\r\n    _calcNearestItem() {\r\n        let t: any = this;\r\n        t.nearestListId = null;\r\n        let data: any, center: number;\r\n\r\n        if (t._virtual)\r\n            t._calcViewPos();\r\n\r\n        let vTop: number, vRight: number, vBottom: number, vLeft: number;\r\n        vTop = t.viewTop;\r\n        vRight = t.viewRight;\r\n        vBottom = t.viewBottom;\r\n        vLeft = t.viewLeft;\r\n\r\n        let breakFor: boolean = false;\r\n        for (let n = 0; n < t.content.childrenCount && !breakFor; n += t._colLineNum) {\r\n            data = t._virtual ? t.displayData[n] : t._calcExistItemPos(n);\r\n            if (data) {\r\n                center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\r\n                switch (t._alignCalcType) {\r\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                        if (data.right >= vLeft) {\r\n                            t.nearestListId = data.id;\r\n                            if (vLeft > center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                        if (data.left <= vRight) {\r\n                            t.nearestListId = data.id;\r\n                            if (vRight < center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                        if (data.bottom <= vTop) {\r\n                            t.nearestListId = data.id;\r\n                            if (vTop < center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                        if (data.top >= vBottom) {\r\n                            t.nearestListId = data.id;\r\n                            if (vBottom > center)\r\n                                t.nearestListId += t._colLineNum;\r\n                            breakFor = true;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        //判断最后一个Item。。。（哎，这些判断真心恶心，判断了前面的还要判断最后一个。。。一开始呢，就只有一个布局（单列布局），那时候代码才三百行，后来就想着完善啊，艹..这坑真深，现在这行数都一千五了= =||）\r\n        data = t._virtual ? t.displayData[t.displayItemNum - 1] : t._calcExistItemPos(t._numItems - 1);\r\n        if (data && data.id == t._numItems - 1) {\r\n            center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\r\n            switch (t._alignCalcType) {\r\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\r\n                    if (vRight > center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\r\n                    if (vLeft < center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\r\n                    if (vBottom < center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\r\n                    if (vTop > center)\r\n                        t.nearestListId = data.id;\r\n                    break;\r\n            }\r\n        }\r\n        // cc.log('t.nearestListId =', t.nearestListId);\r\n    }\r\n    //上一页\r\n    prePage(timeInSecond: number = .5) {\r\n        // cc.log('👈');\r\n        if (!this.checkInited())\r\n            return;\r\n        this.skipPage(this.curPageNum - 1, timeInSecond);\r\n    }\r\n    //下一页\r\n    nextPage(timeInSecond: number = .5) {\r\n        // cc.log('👉');\r\n        if (!this.checkInited())\r\n            return;\r\n        this.skipPage(this.curPageNum + 1, timeInSecond);\r\n    }\r\n    //跳转到第几页\r\n    skipPage(pageNum: number, timeInSecond: number) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (t._slideMode != SlideType.PAGE)\r\n            return cc.error('This function is not allowed to be called, Must SlideMode = PAGE!');\r\n        if (pageNum < 0 || pageNum >= t._numItems)\r\n            return;\r\n        if (t.curPageNum == pageNum)\r\n            return;\r\n        // cc.log(pageNum);\r\n        t.curPageNum = pageNum;\r\n        if (t.pageChangeEvent) {\r\n            cc.Component.EventHandler.emitEvents([t.pageChangeEvent], pageNum);\r\n        }\r\n        t.scrollTo(pageNum, timeInSecond);\r\n    }\r\n    //计算 CustomSize（这个函数还是保留吧，某些罕见的情况的确还是需要手动计算customSize的）\r\n    calcCustomSize(numItems: number) {\r\n        let t: any = this;\r\n        if (!t.checkInited())\r\n            return;\r\n        if (!t._itemTmp)\r\n            return cc.error('Unset template item!');\r\n        if (!t.renderEvent)\r\n            return cc.error('Unset Render-Event!');\r\n        t._customSize = {};\r\n        let temp: any = cc.instantiate(t._itemTmp);\r\n        t.content.addChild(temp);\r\n        for (let n: number = 0; n < numItems; n++) {\r\n            cc.Component.EventHandler.emitEvents([t.renderEvent], temp, n);\r\n            if (temp.height != t._itemSize.height || temp.width != t._itemSize.width) {\r\n                t._customSize[n] = t._sizeType ? temp.height : temp.width;\r\n            }\r\n        }\r\n        if (!Object.keys(t._customSize).length)\r\n            t._customSize = null;\r\n        temp.removeFromParent();\r\n        if (temp.destroy)\r\n            temp.destroy();\r\n        return t._customSize;\r\n    }\r\n}","import ComponentBase from \"./ComponentBase\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TimeTickerDown extends ComponentBase {\r\n\r\n    private total: number = 60;\r\n\r\n    down: boolean = false;\r\n\r\n    private label: cc.Label | cc.RichText = null;\r\n\r\n    run() {\r\n        this.down = true;\r\n        this.label = this.node.getComponent(cc.Label) || this.node.getComponent(cc.RichText);\r\n        this.label.string = String(this.total);\r\n        this.node.children[0].active = false;\r\n        this.down = true;\r\n        this.schedule(this.timeDown, 1)\r\n    }\r\n\r\n    private timeDown() {\r\n        this.total -= 1;\r\n        this.label.string = String(this.total);\r\n\r\n        //取消倒计时\r\n        if (this.total <= 0) {\r\n            this.unschedule(this.timeDown);\r\n            this.label.string = \"发送验证码\";\r\n            this.node.children[0].active = true;\r\n            this.down = false;\r\n            this.total = 60;\r\n        }\r\n    }\r\n\r\n\r\n}","import ComponentBase from \"./common/ComponentBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class closeScene extends ComponentBase {\r\n    start() {\r\n        this.TouchOn(this.node, this.goToHall);\r\n    }\r\n\r\n    goToHall() {\r\n        cc.director.loadScene(\"hall\");\r\n    }\r\n}\r\n","/**\r\n * 需要在node节点上添加graphics节点\r\n */\r\nconst { ccclass, property, executeInEditMode } = cc._decorator;\r\n\r\n@ccclass\r\n@executeInEditMode\r\nexport default class roundRect extends cc.Component {\r\n\r\n    @property()\r\n    radius: number = 0;\r\n\r\n    grap: cc.Graphics = null;\r\n\r\n    start() {\r\n        this.grap = this.node.getComponent(cc.Graphics);\r\n        if (this.grap == null) this.grap = this.node.addComponent(cc.Graphics);\r\n        this.grap.roundRect(-this.node.width / 2, -this.node.height / 2, this.node.width, this.node.height, this.radius);\r\n        this.grap.fill();\r\n    }\r\n\r\n}\r\n","\r\nexport class Tips {\r\n    /**\r\n     * \r\n     * @param txt 提示信息内容\r\n     * @param dt 展示时间\r\n     */\r\n    public static Show(txt: string, dt: number = 0.8) {\r\n        /** 最外层容器,没有大小 */\r\n        let box: cc.Node = new cc.Node();\r\n        //创建背景\r\n        let bg: cc.Node = new cc.Node();\r\n        let texture = new cc.Texture2D();\r\n        let spriteFrame = new cc.SpriteFrame();\r\n        texture.initWithData(new Uint8Array([0, 0, 0]), cc.Texture2D.PixelFormat.RGB888, 1, 1);\r\n        spriteFrame.setTexture(texture);\r\n        spriteFrame.setRect(cc.rect(0, 0, cc.winSize.width * 0.8, 60));\r\n        let sp = bg.addComponent(cc.Sprite);\r\n        sp.spriteFrame = spriteFrame;\r\n        box.x = box.y = bg.x = bg.y = 0;\r\n        bg.opacity = 100;\r\n        box.addChild(bg);\r\n\r\n        let lbNode: cc.Node = new cc.Node();\r\n        lbNode.name = \"Tips\";\r\n        lbNode.active = true;\r\n        lbNode.opacity = 255;\r\n        lbNode.x = lbNode.y = -5;\r\n        let lab = lbNode.addComponent(cc.Label);\r\n        lab.string = txt;\r\n        lab.fontSize = 26;\r\n        box.addChild(lbNode);\r\n\r\n        let parent = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        parent.node.addChild(box);\r\n        box.y = -300;\r\n        box.x = 0;\r\n\r\n        //从-300的位置向上移动到0位置\r\n        cc.tween(box).to(dt, { y: 0 }).delay(0.5).call(() => {\r\n            cc.Tween.stopAllByTarget(lbNode);\r\n            box.removeFromParent();\r\n        }).start();\r\n\r\n    }\r\n}","\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class toggle extends cc.Component {\r\n    @property(cc.Node)\r\n    viewLeft: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    viewRight: cc.Node = null;\r\n\r\n    @property(cc.Toggle)\r\n    leftToggle: cc.Toggle = null;\r\n\r\n    @property(cc.Toggle)\r\n    rightToggle: cc.Toggle = null;\r\n\r\n\r\n    \r\n    protected start(): void {\r\n        this.viewRight.active = false;\r\n    }\r\n\r\n    toggleContainerCall() {\r\n        // console.log(this.leftToggle.isChecked, this.rightToggle.isChecked);\r\n        this.viewLeft.active = this.leftToggle.isChecked;\r\n        this.viewRight.active = this.rightToggle.isChecked;\r\n    }\r\n}\r\n"],"file":"index.js"}