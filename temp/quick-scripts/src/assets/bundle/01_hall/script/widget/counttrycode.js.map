{"version":3,"sources":["assets\\bundle\\01_hall\\script\\widget\\counttrycode.ts"],"names":[],"mappings":";;;;;AAAA,0EAAyE;AACzE,8EAAyE;AACzE,2CAA6C;AAC7C,0EAA6E;AAEvE,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyC,+BAAa;IAAtD;QAAA,qEA4CC;QAzCW,cAAQ,GAAY,IAAI,CAAC;QAEzB,cAAQ,GAAY,IAAI,CAAC;QAEzB,iBAAW,GAAY,IAAI,CAAA;;IAqCvC,CAAC;IAlCa,2BAAK,GAAf;QAAA,iBAcC;QAbG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE5C,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;QACrC,IAAI,IAAI,GAAG,6BAAe,CAAC;QAC3B,IAAI,CAAC,OAAO,CAAC,UAAC,GAAyD,EAAE,GAAW;YAChF,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC;QACtF,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,+BAAS,GAAjB;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IAGO,mCAAa,GAArB,UAAsB,GAAe;QACjC,IAAI,CAAC,GAAG,EAAE;YACN,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;YACjB,OAAO;SACV;QAED,IAAI,IAAI,GAAG,GAAG,CAAC,aAAmC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,yBAAW,CAAC,IAAI,CAAC,kBAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAvCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACe;IAEjC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACe;IAEjC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACiB;IAPlB,WAAW;QAD/B,OAAO;OACa,WAAW,CA4C/B;IAAD,kBAAC;CA5CD,AA4CC,CA5CwC,uBAAa,GA4CrD;kBA5CoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["import { EventManger } from \"../../../00_base/script/common/EventManger\";\nimport ComponentBase from \"../../../00_base/script/common/ComponentBase\";\nimport { EventName } from \"../config/config\";\nimport { CountryCodeData } from \"../../../00_base/script/common/CountryCode\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class countrycode extends ComponentBase {\n\n    @property(cc.Node)\n    private maskNode: cc.Node = null;\n    @property(cc.Node)\n    private itemNode: cc.Node = null;\n    @property(cc.Node)\n    private itemContent: cc.Node = null\n\n\n    protected start(): void {\n        this.TouchOn(this.maskNode, this.closeView);\n\n        this.itemContent.removeAllChildren();\n        let list = CountryCodeData;\n        list.forEach((ele: { id: number, code: string, zh: string, en: string }, idx: number) => {\n            let item = cc.instantiate(this.itemNode);\n            item.name = idx + \"\";\n            item.active = true;\n            item.x = 0;\n            this.itemContent.addChild(item);\n            item.on(cc.Node.EventType.TOUCH_END, this.selectCountry, this);\n            item.children[0].getComponent(cc.Label).string = \"  \" + ele.code + \" - \" + ele.zh;\n        });\n    }\n\n    private closeView() {\n        this.node.destroy();\n        this.maskNode.off(cc.Node.EventType.TOUCH_START, this.closeView, this);\n    }\n\n\n    private selectCountry(evt: TouchEvent) {\n        if (!evt) {\n            cc.error(\"事件不存在\")\n            return;\n        }\n\n        let node = evt.currentTarget as unknown as cc.Node;\n        console.log(node.name);\n        EventManger.emit(EventName.SelectCountryCode, node.name);\n        this.closeView();\n    }\n\n}\n"]}