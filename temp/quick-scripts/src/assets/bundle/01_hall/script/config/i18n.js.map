{"version":3,"sources":["assets\\bundle\\01_hall\\script\\config\\i18n.ts"],"names":[],"mappings":";;;;;AAAA,4DAA8D;AAC9D,uCAAsC;AACtC,iCAAgC;AAChC,0EAAyE;AAEnE,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAkC,wBAAY;IAA9C;QAAA,qEAoCC;QA/BW,YAAM,GAAW,EAAE,CAAC;QAEpB,YAAM,GAAW,EAAE,CAAC;;IA6BhC,CAAC;aApCoB,IAAI;IASX,oBAAK,GAAf;QACI,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE;YACnB,EAAE,CAAC,KAAK,CAAC,kBAAM,aAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,6CAAY,CAAC,CAAC;YACtD,OAAM;SACT;QAED,yBAAW,CAAC,EAAE,CAAC,MAAI,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACjE,IAAI,GAAG,GAAG,wBAAY,CAAC,CAAC,CAAC,CAAC,CAAA,WAAW;QAErC,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;YACnB,IAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACzB,IAAI,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;aACrB;SACJ;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAGO,+BAAgB,GAAxB;QACI,IAAI,GAAG,GAAG,wBAAY,CAAC,mBAAQ,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;YAC/C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC9D;IACL,CAAC;;IAjCM,mBAAc,GAAW,gBAAgB,CAAC;IAIjD;QADC,QAAQ;wCACmB;IALX,IAAI;QADxB,OAAO;OACa,IAAI,CAoCxB;IAAD,WAAC;CApCD,AAoCC,CApCiC,EAAE,CAAC,SAAS,GAoC7C;kBApCoB,IAAI","file":"","sourceRoot":"/","sourcesContent":["import { LanguagesCfg } from \"../../../../res/i18n/Languages\";\r\nimport { UserInfo } from \"./UserInfo\";\r\nimport { Utils } from \"./Utils\";\r\nimport { EventManger } from \"../../../00_base/script/common/EventManger\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class i18n extends cc.Component {\r\n    static LanguageChange: string = \"LanguageChange\";\r\n\r\n\r\n    @property\r\n    private lanStr: string = \"\";\r\n\r\n    private lanKey: string = \"\";\r\n\r\n    protected start(): void {\r\n        if (this.lanStr == \"\") {\r\n            cc.error(`节点 ${Utils.FindPath(this.node)} 的多语言key为空`);\r\n            return\r\n        }\r\n\r\n        EventManger.on(i18n.LanguageChange, this.onChangeLanguage, this);\r\n        let cfg = LanguagesCfg[0];//解析中文,找key\r\n\r\n        for (const key in cfg) {\r\n            const element = cfg[key];\r\n            if (element == this.lanStr) {\r\n                this.lanKey = key;\r\n            }\r\n        }\r\n\r\n        this.onChangeLanguage();\r\n    }\r\n\r\n\r\n    private onChangeLanguage() {\r\n        let cfg = LanguagesCfg[UserInfo.language];\r\n        if (this.node && this.node.getComponent(cc.Label)) {\r\n            this.node.getComponent(cc.Label).string = cfg[this.lanKey];\r\n        }\r\n    }\r\n\r\n}"]}