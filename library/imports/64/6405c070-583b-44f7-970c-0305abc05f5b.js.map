{"version":3,"sources":["assets\\bundle\\02_game\\script\\config\\deskInfo.ts"],"names":[],"mappings":";;;;;;;AAEA;IAAA;QAUY,YAAO,GAAwC,EAAE,CAAA;QAEjD,gBAAW,GAAwC,EAAE,CAAA;QAEtD,UAAK,GAAU,EAAE,CAAA;QAsBjB,YAAO,GAAW,CAAC,CAAA,CAAC,kBAAkB;QAEtC,aAAQ,GAAW,CAAC,CAAC,CAAA,CAAC,SAAS;IA+C1C,CAAC;IAlFG,sBAAkB,eAAG;aAArB;YACI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;gBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAiCM,8BAAW,GAAlB,UAAmB,IAAS;QAA5B,iBAoBC;QAnBG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAA;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAA;QAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;QACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;QACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAA;QAEjD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,OAAO;YAC3B,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6BAAU,GAAjB,UAAkB,IAAY,EAAE,IAAiB;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;IACjC,CAAC;IAEM,6BAAU,GAAjB,UAAkB,IAAY;QAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;SAChC;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAEM,6BAAU,GAAjB,UAAkB,IAAY,EAAE,IAAiB;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;IAC7B,CAAC;IAEM,6BAAU,GAAjB,UAAkB,IAAY;QAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;SAC5B;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAlFc,aAAI,GAAa,IAAI,CAAA;IAoFxC,eAAC;CArFD,AAqFC,IAAA;AAED,WAAW;AACE,QAAA,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nclass deskInfo {\r\n    private static sing: deskInfo = null\r\n\r\n    public static get ins(): deskInfo {\r\n        if (this.sing == null) {\r\n            this.sing = new deskInfo();\r\n        }\r\n        return this.sing;\r\n    }\r\n\r\n    private players: { [trueSeat: number]: LplayerInfo } = {}\r\n\r\n    private seatPlayers: { [trueSeat: number]: DplayerInfo } = {}\r\n\r\n    public board: any[] = []\r\n\r\n    public deskId: number\r\n\r\n    public deskName: string\r\n\r\n    public playerBetTime: number\r\n\r\n    public boardNum: number\r\n\r\n    public pots: any\r\n\r\n    public round: number\r\n\r\n    public currRoundPlayerId: number\r\n\r\n    public isStartGame: boolean\r\n\r\n    public roundIsRun: boolean\r\n\r\n    public createDeskPlayerId: number\r\n\r\n    public seatLen: number = 9 //默认9（灯光角度数量与座位数一致\r\n\r\n    public readyPos: number = -1 //准备选择的位置\r\n\r\n\r\n    public setDeskInfo(data: any) {\r\n        this.deskId = data.deskId\r\n        this.deskName = data.deskName\r\n        this.playerBetTime = data.playerBetTime\r\n        this.boardNum = data.boardNum\r\n        this.board = data.board\r\n        this.pots = data.pots\r\n        this.round = data.round\r\n        this.currRoundPlayerId = data.currRoundPlayerId\r\n        this.isStartGame = data.isStartGame\r\n        this.roundIsRun = data.roundIsRun\r\n        this.createDeskPlayerId = data.createDeskPlayerId\r\n\r\n        data.playerList.forEach(lpalyer => {\r\n            this.setLplayer(lpalyer.position, lpalyer)\r\n        });\r\n\r\n        data.seatPlayerList.forEach(dplayer => {\r\n            this.setLplayer(dplayer.position, dplayer)\r\n        });\r\n    }\r\n\r\n    public setDplayer(seat: number, data: DplayerInfo) {\r\n        this.seatPlayers[seat] = data\r\n    }\r\n\r\n    public getDplayer(seat: number) {\r\n        if (this.players[seat]) {\r\n            return this.seatPlayers[seat]\r\n        }\r\n        return null\r\n    }\r\n\r\n    public setLplayer(seat: number, data: LplayerInfo) {\r\n        this.players[seat] = data\r\n    }\r\n\r\n    public getLplayer(seat: number) {\r\n        if (this.players[seat]) {\r\n            return this.players[seat]\r\n        }\r\n        return null\r\n    }\r\n\r\n}\r\n\r\n/** 桌内信息 */\r\nexport const DeskInfo = deskInfo.ins;\r\n\r\n/** 桌子内玩家信息 */\r\nexport interface LplayerInfo {   //\r\n    id: number\r\n    name: string\r\n    code: string\r\n    headPic: string\r\n    position: number//服务端真实玩家位置\r\n    //coneverSeat: number//客服端玩家位置\r\n    bankRoll: number[],//玩家手牌\r\n    status: string //操作状态\r\n}\r\n\r\n/** 座位上玩家信息 */\r\nexport interface DplayerInfo {\r\n    playerId: number\r\n    pot: number\r\n    position: number//服务端真实玩家位置\r\n    coneverSeat?: number//客服端玩家位置\r\n    handsCard: number[],//玩家手牌\r\n    status: number //操作状态\r\n    curPositionRole: string//\r\n}"]}