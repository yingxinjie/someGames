{"version":3,"sources":["assets\\bundle\\02_game\\script\\config\\deskInfo.ts"],"names":[],"mappings":";;;;;;;AAEA;IAAA;QAUY,YAAO,GAAwC,EAAE,CAAA;QAEjD,gBAAW,GAAwC,EAAE,CAAA;QAErD,UAAK,GAAU,EAAE,CAAA;IAkE7B,CAAC;IA7EG,sBAAkB,eAAG;aAArB;YACI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;gBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IA4BM,8BAAW,GAAlB,UAAmB,IAAS;QAA5B,iBAoBC;QAnBG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAA;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAA;QAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;QACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;QACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAA;QAEjD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,OAAO;YAC3B,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;QAC9C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6BAAU,GAAjB,UAAkB,IAAY,EAAE,IAAiB;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;IACjC,CAAC;IAEM,6BAAU,GAAjB,UAAkB,IAAY;QAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;SAChC;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IAEM,6BAAU,GAAjB,UAAkB,IAAY,EAAE,IAAiB;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA;IAC7B,CAAC;IAEM,6BAAU,GAAjB,UAAkB,IAAY;QAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACpB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;SAC5B;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IA7Ec,aAAI,GAAa,IAAI,CAAA;IA+ExC,eAAC;CAhFD,AAgFC,IAAA;AAED,WAAW;AACE,QAAA,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC","file":"","sourceRoot":"/","sourcesContent":["\n\nclass deskInfo {\n    private static sing: deskInfo = null\n\n    public static get ins(): deskInfo {\n        if (this.sing == null) {\n            this.sing = new deskInfo();\n        }\n        return this.sing;\n    }\n\n    private players: { [trueSeat: number]: LplayerInfo } = {}\n\n    private seatPlayers: { [trueSeat: number]: DplayerInfo } = {}\n\n    private board: any[] = []\n\n    public deskId: number\n\n    public deskName: string\n\n    public playerBetTime: number\n\n    public boardNum: number\n\n    public pots: any\n\n    public round: number\n\n    public currRoundPlayerId: number\n\n    public isStartGame: boolean\n\n    public roundIsRun: boolean\n\n    public createDeskPlayerId: number\n\n    public setDeskInfo(data: any) {\n        this.deskId = data.deskId\n        this.deskName = data.deskName\n        this.playerBetTime = data.playerBetTime\n        this.boardNum = data.boardNum\n        this.board = data.board\n        this.pots = data.pots\n        this.round = data.round\n        this.currRoundPlayerId = data.currRoundPlayerId\n        this.isStartGame = data.isStartGame\n        this.roundIsRun = data.roundIsRun\n        this.createDeskPlayerId = data.createDeskPlayerId\n\n        data.playerList.forEach(lpalyer => {\n            this.setLplayer(lpalyer.position, lpalyer)\n        });\n\n        data.seatPlayerList.forEach(dplayer => {\n            this.setLplayer(dplayer.position, dplayer)\n        });\n    }\n\n    public setDplayer(seat: number, data: DplayerInfo) {\n        this.seatPlayers[seat] = data\n    }\n\n    public getDplayer(seat: number) {\n        if (this.players[seat]) {\n            return this.seatPlayers[seat]\n        }\n        return null\n    }\n\n    public setLplayer(seat: number, data: LplayerInfo) {\n        this.players[seat] = data\n    }\n\n    public getLplayer(seat: number) {\n        if (this.players[seat]) {\n            return this.players[seat]\n        }\n        return null\n    }\n\n}\n\n/** 桌内信息 */\nexport const DeskInfo = deskInfo.ins;\n\n/** 桌子内玩家信息 */\nexport interface LplayerInfo {   //\n    id: number\n    name: string\n    code: string\n    headPic: string\n    position: number//服务端真实玩家位置\n    //coneverSeat: number//客服端玩家位置\n    bankRoll: number[],//玩家手牌\n    status: string //操作状态\n}\n\n/** 座位上玩家信息 */\nexport interface DplayerInfo {\n    playerId: number\n    pot: number\n    position: number//服务端真实玩家位置\n    coneverSeat?: number//客服端玩家位置\n    handsCard: number[],//玩家手牌\n    status: number //操作状态\n    curPositionRole: string//\n}"]}