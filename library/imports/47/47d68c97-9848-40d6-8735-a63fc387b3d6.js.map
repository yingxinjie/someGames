{"version":3,"sources":["assets\\bundle\\02_game\\script\\timedown.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEtF,2EAAsE;AAEhE,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAsC,4BAAa;IAAnD;QAAA,qEAwEC;QArEW,cAAQ,GAAY,IAAI,CAAC;QAGzB,cAAQ,GAAiB,IAAI,CAAC;QAG9B,aAAO,GAAa,IAAI,CAAC;QAGzB,YAAM,GAAY,KAAK,CAAA;QAEvB,aAAO,GAAW,CAAC,CAAA;QAEnB,iBAAW,GAAW,CAAC,CAAA;QAEvB,gBAAU,GAAc,IAAI,CAAA;QA0B5B,aAAO,GAAW,CAAC,CAAA;;IA4B/B,CAAC;IApDa,wBAAK,GAAf;IAGA,CAAC;IAED,2BAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;QAClC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAA;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAA;QAChC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,CAAA;QAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAA;QACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;QACpB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;IACtB,CAAC;IAGD,2BAAQ,GAAR;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;IACxB,CAAC;IAMD,yBAAM,GAAN,UAAO,EAAU;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO;SACV;QAED,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;QAE9C,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC;YAAE,IAAI,CAAC,QAAQ,EAAE,CAAA;QAErC,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAA;YAC5C,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,GAAG,CAAA;SACrD;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,MAAM,IAAI,CAAC,EAAE;YACb,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC3C;SACJ;IAEL,CAAC;IAnED;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACe;IAGjC;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;8CACe;IAGtC;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;6CACc;IAThB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAwE5B;IAAD,eAAC;CAxED,AAwEC,CAxEqC,uBAAa,GAwElD;kBAxEoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport ComponentBase from \"../../00_base/script/common/ComponentBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class timedown extends ComponentBase {\r\n\r\n    @property(cc.Node)\r\n    private animNode: cc.Node = null;\r\n\r\n    @property(cc.Animation)\r\n    private animTime: cc.Animation = null;\r\n\r\n    @property(cc.Label)\r\n    private labTime: cc.Label = null;\r\n\r\n\r\n    private isPlay: boolean = false\r\n\r\n    private maxTime: number = 0\r\n\r\n    private percentTime: number = 0\r\n\r\n    private timeSprite: cc.Sprite = null\r\n\r\n    protected start(): void {\r\n\r\n\r\n    }\r\n\r\n    playTime(time: number) {\r\n        this.maxTime = this.nowTime = time\r\n        this.labTime.string = \"\" + time\r\n        this.timeSprite = this.node.getComponent(cc.Sprite)\r\n        this.timeSprite.fillStart = 0.25\r\n        this.timeSprite.fillRange = 1\r\n        this.animNode.angle = 0\r\n        this.animTime.play()\r\n        this.node.active = true\r\n        this.isPlay = true\r\n    }\r\n\r\n\r\n    stopTime() {\r\n        this.isPlay = false\r\n        this.node.active = false\r\n        this.animTime.stop()\r\n    }\r\n  \r\n    private nowTime: number = 0\r\n\r\n\r\n\r\n    update(dt: number) {\r\n        if (!this.isPlay) {\r\n            return;\r\n        }\r\n\r\n        this.nowTime -= dt;\r\n        this.percentTime = this.nowTime / this.maxTime\r\n\r\n        if (this.nowTime < 0) this.stopTime()\r\n\r\n        if (this.percentTime >= 0) {\r\n            this.timeSprite.fillRange = this.percentTime\r\n            this.animNode.angle = this.percentTime * 360 - 360\r\n        }\r\n\r\n        let tmpInt = Math.floor(this.nowTime);\r\n        if (tmpInt >= 0) {\r\n            if (this.labTime) {\r\n                this.labTime.string = tmpInt.toString();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n"]}