{"version":3,"sources":["assets\\bundle\\01_hall\\script\\config\\Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { DeviceType, GlobalConfig } from \"./config\";\r\nimport { C_User } from \"./C_User\";\r\n\r\nexport class Utils {\r\n    /**\r\n     * 查找此节点在运行中的路劲\r\n     * @param node 查询的节点\r\n     * @returns \r\n     */\r\n    static FindPath(node: cc.Node) {\r\n        let path: string = \"/\" + node.name;\r\n        let continueFind: boolean = true;\r\n        let parent: cc.Node = node.parent;\r\n        while (continueFind) {\r\n            if (parent.getComponent(cc.Canvas)) {\r\n                continueFind = false;\r\n                path = parent.name + path;\r\n                break;\r\n            }\r\n\r\n            path = \"/\" + parent.name + path;\r\n            parent = parent.parent;\r\n        }\r\n\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * 正则判断手机号\r\n     * @param phone 手机号\r\n     * @returns \r\n     */\r\n    static IsPhone(phone: string) {\r\n        return /^1[3456789][0-9]\\d{8}/.test(phone);\r\n    }\r\n\r\n    /**\r\n     * 正则判断邮箱\r\n     * @param mail 邮箱\r\n     */\r\n    static IsMail(mail: string) {\r\n        // let atIdx: number = mail.indexOf(\"@\");\r\n        // let dianIdx: number = mail.indexOf(\".\");\r\n        // //@符号在第二个位置以上 且在点的前面 \r\n        // if (atIdx > 0 && atIdx < dianIdx - 1 && dianIdx > atIdx + 1 && dianIdx < mail.length - 3)\r\n        //     return true;\r\n        // return false;\r\n        return /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/.test(mail);\r\n    }\r\n\r\n    /** 获取url的参数 */\r\n    static UrlParams(key: string) {\r\n        if (!window) { return \"\" }\r\n        let search: string = window.location.search.replace(\"?\", \"\");\r\n        let searchArr: string[] = search.split(\"&\");\r\n        for (let i = 0; i < searchArr.length; i++) {\r\n            let kvArr: string[] = searchArr[i].split(\"=\");\r\n            if (kvArr[0] == key) {\r\n                return kvArr[1];\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * post请求\r\n     * @param path api路径\r\n     * @param params 参数对象\r\n     */\r\n    static async Post(path: string, params: any) {\r\n        let url: string = \"http://\" + GlobalConfig.IPort + path;\r\n        console.log(\"http请求\", url, JSON.stringify(params));\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('POST', url);\r\n            xhr.setRequestHeader('Content-Type', 'application/json;charset=utf-8');\r\n            xhr.setRequestHeader(\"token\", C_User.ins.token);\r\n            xhr.onload = () => {\r\n                if (xhr.status === 200) {\r\n                    let res: any;\r\n                    try {\r\n                        res = JSON.parse(xhr.responseText);\r\n                        console.log(\"http请求返回\", JSON.stringify(res));\r\n                        resolve(res);\r\n                    } catch (error) {\r\n                        console.error(`POST 请求${url} 返回数据JSON解析错误 ${res}`);\r\n                    }\r\n                } else {\r\n                    reject(new Error(`HTTP请求失败,状态码: ${xhr.status}`));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                reject(new Error('HTTP请求出错'));\r\n            };\r\n\r\n            xhr.send(JSON.stringify(params));\r\n        });\r\n    }\r\n\r\n    /**\r\n      * post请求\r\n      * @param path api路径\r\n      * @param params 参数对象\r\n      */\r\n    static async Get(path: string, params?: any) {\r\n\r\n        let search: string = \"\";\r\n        if (params) {\r\n            search = \"?\";\r\n            for (const key in params) {\r\n                const element = params[key];\r\n                search += key + \"=\" + element + \"&\"\r\n            }\r\n        }\r\n\r\n        let url: string = \"http://\" + GlobalConfig.IPort + path + search.substring(0, search.length - 1);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url);\r\n            xhr.setRequestHeader('Content-Type', 'application/json;charset=utf-8');\r\n            xhr.onload = () => {\r\n                if (xhr.status === 200) {\r\n                    let res: any;\r\n                    try {\r\n                        res = JSON.parse(xhr.responseText);\r\n                        resolve(res);\r\n                    } catch (error) {\r\n                        console.error(`POST 请求${url} 返回数据JSON解析错误 ${res}`);\r\n                    }\r\n                } else {\r\n                    reject(new Error(`HTTP请求失败,状态码: ${xhr.status}`));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                reject(new Error('HTTP请求出错'));\r\n            };\r\n\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n\r\n    static CheckDeviceType(): DeviceType {\r\n        var BrowserInfo = {\r\n            userAgent: navigator.userAgent.toLowerCase(),\r\n            isAndroid: Boolean(navigator.userAgent.match(/android/ig)),\r\n            isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/ig)),\r\n            isIpad: Boolean(navigator.userAgent.match(/ipad/ig)),\r\n            isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/ig)),\r\n        }\r\n\r\n        if (BrowserInfo.isAndroid) {\r\n            return DeviceType.Android;\r\n        } else if (BrowserInfo.isIpad || BrowserInfo.isIphone) {\r\n            return DeviceType.Ios;\r\n        } else {\r\n            return DeviceType.Web;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n"]}