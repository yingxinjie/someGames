{"version":3,"sources":["assets\\bundle\\01_hall\\script\\config\\cwebsocket.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Tips } from \"../../../00_base/script/uiutils/tips\";\r\n\r\n\r\n\r\nexport class cwebsocket {\r\n    private static readonly nommal = 1;//默认状态\r\n    private static readonly connecting = 2;//连接中\r\n    private static readonly Opened = 3;//连接成功,打开了连接\r\n    private connectState: number = cwebsocket.nommal;\r\n\r\n    /** 重连次数统计 */\r\n    private reconnectCounts: number = 0;\r\n    /** 连接地址 */\r\n    private address: string = \"ws://127.0.0.1:8001\";\r\n    private ws: WebSocket = null;\r\n\r\n    private heartIntervalHandle = null;\r\n\r\n\r\n    private id: number = 0;\r\n    constructor(address: string, id: number) {\r\n        this.address = address;\r\n        this.id = id;\r\n        this.connect();\r\n    }\r\n\r\n    private connect() {\r\n        this.ws = new WebSocket(this.address);\r\n        this.connectState = cwebsocket.connecting;\r\n\r\n        this.ws.onopen = () => {\r\n            this.connectState = cwebsocket.Opened;\r\n            console.log(\"链接成功\");\r\n\r\n            this.heartIntervalHandle = setInterval(() => {\r\n                this.ws.send(JSON.stringify({ id: 0, info: \"ping\" }));\r\n            }, 10000);\r\n\r\n            //发送之前未发送的数据\r\n            while (this.willSendInfo.length > 0) {\r\n                this.ws.send(this.willSendInfo.shift());\r\n            }\r\n        };\r\n\r\n        this.ws.onmessage = (event) => {\r\n            console.log(\"收到消息: \", event.data);\r\n        };\r\n\r\n        this.ws.onerror = (event) => {\r\n            console.log(\"收到一个错误,服务器关闭的时候这里不会触发\");//连接服务器连不上的时候会触发\r\n        };\r\n\r\n        this.ws.onclose = (event) => {\r\n            console.log(\"链接关闭\");//服务端关机的时候会触发 //连接服务器连不上的时候会触发\r\n            this.resetConnect();\r\n            console.log(\"socketid\", this.id)\r\n\r\n            //取消重连,检查网络提示\r\n            if (this.reconnectCounts >= 2) {\r\n                Tips.Show(\"重连次数过多,请检查网络!\");\r\n                this.reconnectCounts = 0;\r\n                this.willSendInfo = [];\r\n                return;\r\n            }\r\n\r\n            //重连\r\n            setTimeout(() => {\r\n                this.reconnectCounts++;\r\n                this.connect();\r\n            }, 3000);//3秒重连\r\n        };\r\n    }\r\n\r\n    /** c重置连接 */\r\n    private resetConnect() {\r\n        this.ws = null;\r\n        this.connectState = 0;\r\n        clearInterval(this.heartIntervalHandle);\r\n    }\r\n\r\n    private willSendInfo: string[] = [];\r\n    /**\r\n     * 发送数据\r\n     * @param info 发送的json字符串数据\r\n     */\r\n    send(info: string) {\r\n        //ws不为空,连接成功了之后再发\r\n        if (this.ws && this.connectState != cwebsocket.Opened) {\r\n            this.willSendInfo.push(info);\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.connectState != cwebsocket.Opened || this.ws.readyState != WebSocket.OPEN) {\r\n            //检测到未连接,启动连接\r\n            this.connectState = cwebsocket.nommal;\r\n            this.resetConnect();\r\n            this.connect();\r\n            return;\r\n        }\r\n\r\n        this.ws.send(info);\r\n    }\r\n\r\n\r\n    private handleInfo: { id: number, func: Function, cbo: any }[] = []\r\n\r\n\r\n    on(id: number, func: Function, cbo: any) {\r\n        if (id <= 0) {\r\n            cc.error(\"消息id必须>0\", id);\r\n            return;\r\n        }\r\n\r\n        if (!func) {\r\n            cc.error(\"消息注册回调不能为空\", id);\r\n            return;\r\n        }\r\n\r\n        if (!cbo) {\r\n            cc.error(\"消息注册的函数句柄不能为空\", id);\r\n            return;\r\n        }\r\n\r\n        this.handleInfo.push({ id: id, func: func, cbo: cbo });\r\n    }\r\n\r\n    off(id: number, func: Function, cbo: any) {\r\n        this.handleInfo.forEach((item: { id: number, func: Function, cbo: any }, idx: number) => {\r\n            if (item.id == id && item.func === func && item.cbo === cbo) {\r\n                this.handleInfo.splice(idx, 1)\r\n            }\r\n        })\r\n    }\r\n\r\n    destory() {\r\n        this.handleInfo = null;\r\n        if (this.ws) {\r\n            this.ws.onopen = null;\r\n            this.ws.onclose = null;\r\n            this.ws.onerror = null;\r\n            this.ws.onmessage = null;\r\n        }\r\n    }\r\n\r\n}"]}